/*
 * wc/v3
 * OpenAPI documented, based on generated OpenAPI document of the namespace wc/v3 with some manual fixes.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.CouponsMetaData;
import org.openapitools.client.model.OrdersTaxes;

/**
 * OrdersFeeLines
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-03T11:14:37.017890013+01:00[Europe/Amsterdam]")
public class OrdersFeeLines {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TAX_CLASS = "tax_class";
  @SerializedName(SERIALIZED_NAME_TAX_CLASS)
  private String taxClass;

  /**
   * Tax status of fee.
   */
  @JsonAdapter(TaxStatusEnum.Adapter.class)
  public enum TaxStatusEnum {
    TAXABLE("taxable"),
    
    NONE("none");

    private String value;

    TaxStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TaxStatusEnum fromValue(String value) {
      for (TaxStatusEnum b : TaxStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TaxStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TaxStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TaxStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TaxStatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TAX_STATUS = "tax_status";
  @SerializedName(SERIALIZED_NAME_TAX_STATUS)
  private TaxStatusEnum taxStatus;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private String total;

  public static final String SERIALIZED_NAME_TOTAL_TAX = "total_tax";
  @SerializedName(SERIALIZED_NAME_TOTAL_TAX)
  private String totalTax;

  public static final String SERIALIZED_NAME_TAXES = "taxes";
  @SerializedName(SERIALIZED_NAME_TAXES)
  private List<OrdersTaxes> taxes = null;

  public static final String SERIALIZED_NAME_META_DATA = "meta_data";
  @SerializedName(SERIALIZED_NAME_META_DATA)
  private List<CouponsMetaData> metaData = null;


  public OrdersFeeLines id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Item ID.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Item ID.")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public OrdersFeeLines name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Fee name.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Fee name.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public OrdersFeeLines taxClass(String taxClass) {
    
    this.taxClass = taxClass;
    return this;
  }

   /**
   * Tax class of fee.
   * @return taxClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tax class of fee.")

  public String getTaxClass() {
    return taxClass;
  }


  public void setTaxClass(String taxClass) {
    this.taxClass = taxClass;
  }


  public OrdersFeeLines taxStatus(TaxStatusEnum taxStatus) {
    
    this.taxStatus = taxStatus;
    return this;
  }

   /**
   * Tax status of fee.
   * @return taxStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tax status of fee.")

  public TaxStatusEnum getTaxStatus() {
    return taxStatus;
  }


  public void setTaxStatus(TaxStatusEnum taxStatus) {
    this.taxStatus = taxStatus;
  }


  public OrdersFeeLines total(String total) {
    
    this.total = total;
    return this;
  }

   /**
   * Line total (after discounts).
   * @return total
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Line total (after discounts).")

  public String getTotal() {
    return total;
  }


  public void setTotal(String total) {
    this.total = total;
  }


  public OrdersFeeLines totalTax(String totalTax) {
    
    this.totalTax = totalTax;
    return this;
  }

   /**
   * Line total tax (after discounts).
   * @return totalTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Line total tax (after discounts).")

  public String getTotalTax() {
    return totalTax;
  }


  public void setTotalTax(String totalTax) {
    this.totalTax = totalTax;
  }


  public OrdersFeeLines taxes(List<OrdersTaxes> taxes) {
    
    this.taxes = taxes;
    return this;
  }

  public OrdersFeeLines addTaxesItem(OrdersTaxes taxesItem) {
    if (this.taxes == null) {
      this.taxes = new ArrayList<OrdersTaxes>();
    }
    this.taxes.add(taxesItem);
    return this;
  }

   /**
   * Line taxes.
   * @return taxes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Line taxes.")

  public List<OrdersTaxes> getTaxes() {
    return taxes;
  }


  public void setTaxes(List<OrdersTaxes> taxes) {
    this.taxes = taxes;
  }


  public OrdersFeeLines metaData(List<CouponsMetaData> metaData) {
    
    this.metaData = metaData;
    return this;
  }

  public OrdersFeeLines addMetaDataItem(CouponsMetaData metaDataItem) {
    if (this.metaData == null) {
      this.metaData = new ArrayList<CouponsMetaData>();
    }
    this.metaData.add(metaDataItem);
    return this;
  }

   /**
   * Meta data.
   * @return metaData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Meta data.")

  public List<CouponsMetaData> getMetaData() {
    return metaData;
  }


  public void setMetaData(List<CouponsMetaData> metaData) {
    this.metaData = metaData;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrdersFeeLines ordersFeeLines = (OrdersFeeLines) o;
    return Objects.equals(this.id, ordersFeeLines.id) &&
        Objects.equals(this.name, ordersFeeLines.name) &&
        Objects.equals(this.taxClass, ordersFeeLines.taxClass) &&
        Objects.equals(this.taxStatus, ordersFeeLines.taxStatus) &&
        Objects.equals(this.total, ordersFeeLines.total) &&
        Objects.equals(this.totalTax, ordersFeeLines.totalTax) &&
        Objects.equals(this.taxes, ordersFeeLines.taxes) &&
        Objects.equals(this.metaData, ordersFeeLines.metaData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, taxClass, taxStatus, total, totalTax, taxes, metaData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrdersFeeLines {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    taxClass: ").append(toIndentedString(taxClass)).append("\n");
    sb.append("    taxStatus: ").append(toIndentedString(taxStatus)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    totalTax: ").append(toIndentedString(totalTax)).append("\n");
    sb.append("    taxes: ").append(toIndentedString(taxes)).append("\n");
    sb.append("    metaData: ").append(toIndentedString(metaData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

