/*
 * wc/v3
 * OpenAPI documented, based on generated OpenAPI document of the namespace wc/v3 with some manual fixes.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Tax1
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-03T11:14:37.017890013+01:00[Europe/Amsterdam]")
public class Tax1 {
  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_POSTCODE = "postcode";
  @SerializedName(SERIALIZED_NAME_POSTCODE)
  private String postcode;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_RATE = "rate";
  @SerializedName(SERIALIZED_NAME_RATE)
  private String rate;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private Integer priority;

  public static final String SERIALIZED_NAME_COMPOUND = "compound";
  @SerializedName(SERIALIZED_NAME_COMPOUND)
  private Boolean compound;

  public static final String SERIALIZED_NAME_SHIPPING = "shipping";
  @SerializedName(SERIALIZED_NAME_SHIPPING)
  private Boolean shipping;

  public static final String SERIALIZED_NAME_ORDER = "order";
  @SerializedName(SERIALIZED_NAME_ORDER)
  private Integer order;

  /**
   * Tax class.
   */
  @JsonAdapter(PropertyClassEnum.Adapter.class)
  public enum PropertyClassEnum {
    STANDARD("standard"),
    
    REDUCED_RATE("reduced-rate"),
    
    ZERO_RATE("zero-rate");

    private String value;

    PropertyClassEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PropertyClassEnum fromValue(String value) {
      for (PropertyClassEnum b : PropertyClassEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PropertyClassEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PropertyClassEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PropertyClassEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PropertyClassEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_PROPERTY_CLASS = "class";
  @SerializedName(SERIALIZED_NAME_PROPERTY_CLASS)
  private PropertyClassEnum propertyClass;

  public static final String SERIALIZED_NAME_POSTCODES = "postcodes";
  @SerializedName(SERIALIZED_NAME_POSTCODES)
  private List<String> postcodes = null;

  public static final String SERIALIZED_NAME_CITIES = "cities";
  @SerializedName(SERIALIZED_NAME_CITIES)
  private List<String> cities = null;


  public Tax1 country(String country) {
    
    this.country = country;
    return this;
  }

   /**
   * Country ISO 3166 code.
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Country ISO 3166 code.")

  public String getCountry() {
    return country;
  }


  public void setCountry(String country) {
    this.country = country;
  }


  public Tax1 state(String state) {
    
    this.state = state;
    return this;
  }

   /**
   * State code.
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "State code.")

  public String getState() {
    return state;
  }


  public void setState(String state) {
    this.state = state;
  }


  public Tax1 postcode(String postcode) {
    
    this.postcode = postcode;
    return this;
  }

   /**
   * Postcode/ZIP, it doesn&#39;t support multiple values. Deprecated as of WooCommerce 5.3, &#39;postcodes&#39; should be used instead.
   * @return postcode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Postcode/ZIP, it doesn't support multiple values. Deprecated as of WooCommerce 5.3, 'postcodes' should be used instead.")

  public String getPostcode() {
    return postcode;
  }


  public void setPostcode(String postcode) {
    this.postcode = postcode;
  }


  public Tax1 city(String city) {
    
    this.city = city;
    return this;
  }

   /**
   * City name, it doesn&#39;t support multiple values. Deprecated as of WooCommerce 5.3, &#39;cities&#39; should be used instead.
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "City name, it doesn't support multiple values. Deprecated as of WooCommerce 5.3, 'cities' should be used instead.")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    this.city = city;
  }


  public Tax1 rate(String rate) {
    
    this.rate = rate;
    return this;
  }

   /**
   * Tax rate.
   * @return rate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tax rate.")

  public String getRate() {
    return rate;
  }


  public void setRate(String rate) {
    this.rate = rate;
  }


  public Tax1 name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Tax rate name.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tax rate name.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Tax1 priority(Integer priority) {
    
    this.priority = priority;
    return this;
  }

   /**
   * Tax priority.
   * @return priority
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tax priority.")

  public Integer getPriority() {
    return priority;
  }


  public void setPriority(Integer priority) {
    this.priority = priority;
  }


  public Tax1 compound(Boolean compound) {
    
    this.compound = compound;
    return this;
  }

   /**
   * Whether or not this is a compound rate.
   * @return compound
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether or not this is a compound rate.")

  public Boolean getCompound() {
    return compound;
  }


  public void setCompound(Boolean compound) {
    this.compound = compound;
  }


  public Tax1 shipping(Boolean shipping) {
    
    this.shipping = shipping;
    return this;
  }

   /**
   * Whether or not this tax rate also gets applied to shipping.
   * @return shipping
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether or not this tax rate also gets applied to shipping.")

  public Boolean getShipping() {
    return shipping;
  }


  public void setShipping(Boolean shipping) {
    this.shipping = shipping;
  }


  public Tax1 order(Integer order) {
    
    this.order = order;
    return this;
  }

   /**
   * Indicates the order that will appear in queries.
   * @return order
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates the order that will appear in queries.")

  public Integer getOrder() {
    return order;
  }


  public void setOrder(Integer order) {
    this.order = order;
  }


  public Tax1 propertyClass(PropertyClassEnum propertyClass) {
    
    this.propertyClass = propertyClass;
    return this;
  }

   /**
   * Tax class.
   * @return propertyClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tax class.")

  public PropertyClassEnum getPropertyClass() {
    return propertyClass;
  }


  public void setPropertyClass(PropertyClassEnum propertyClass) {
    this.propertyClass = propertyClass;
  }


  public Tax1 postcodes(List<String> postcodes) {
    
    this.postcodes = postcodes;
    return this;
  }

  public Tax1 addPostcodesItem(String postcodesItem) {
    if (this.postcodes == null) {
      this.postcodes = new ArrayList<String>();
    }
    this.postcodes.add(postcodesItem);
    return this;
  }

   /**
   * List of postcodes / ZIPs. Introduced in WooCommerce 5.3.
   * @return postcodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of postcodes / ZIPs. Introduced in WooCommerce 5.3.")

  public List<String> getPostcodes() {
    return postcodes;
  }


  public void setPostcodes(List<String> postcodes) {
    this.postcodes = postcodes;
  }


  public Tax1 cities(List<String> cities) {
    
    this.cities = cities;
    return this;
  }

  public Tax1 addCitiesItem(String citiesItem) {
    if (this.cities == null) {
      this.cities = new ArrayList<String>();
    }
    this.cities.add(citiesItem);
    return this;
  }

   /**
   * List of city names. Introduced in WooCommerce 5.3.
   * @return cities
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of city names. Introduced in WooCommerce 5.3.")

  public List<String> getCities() {
    return cities;
  }


  public void setCities(List<String> cities) {
    this.cities = cities;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Tax1 tax1 = (Tax1) o;
    return Objects.equals(this.country, tax1.country) &&
        Objects.equals(this.state, tax1.state) &&
        Objects.equals(this.postcode, tax1.postcode) &&
        Objects.equals(this.city, tax1.city) &&
        Objects.equals(this.rate, tax1.rate) &&
        Objects.equals(this.name, tax1.name) &&
        Objects.equals(this.priority, tax1.priority) &&
        Objects.equals(this.compound, tax1.compound) &&
        Objects.equals(this.shipping, tax1.shipping) &&
        Objects.equals(this.order, tax1.order) &&
        Objects.equals(this.propertyClass, tax1.propertyClass) &&
        Objects.equals(this.postcodes, tax1.postcodes) &&
        Objects.equals(this.cities, tax1.cities);
  }

  @Override
  public int hashCode() {
    return Objects.hash(country, state, postcode, city, rate, name, priority, compound, shipping, order, propertyClass, postcodes, cities);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Tax1 {\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    postcode: ").append(toIndentedString(postcode)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    rate: ").append(toIndentedString(rate)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    compound: ").append(toIndentedString(compound)).append("\n");
    sb.append("    shipping: ").append(toIndentedString(shipping)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    propertyClass: ").append(toIndentedString(propertyClass)).append("\n");
    sb.append("    postcodes: ").append(toIndentedString(postcodes)).append("\n");
    sb.append("    cities: ").append(toIndentedString(cities)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

