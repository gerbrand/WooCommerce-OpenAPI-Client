/*
 * wc/v3
 * OpenAPI documented, based on generated OpenAPI document of the namespace wc/v3 with some manual fixes.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.CouponsMetaData;
import org.openapitools.client.model.OrdersBilling;
import org.openapitools.client.model.OrdersCouponLines;
import org.openapitools.client.model.OrdersFeeLines;
import org.openapitools.client.model.OrdersLineItems;
import org.openapitools.client.model.OrdersShipping;
import org.openapitools.client.model.OrdersShippingLines;
import org.openapitools.client.model.ShopOrderRefunds;
import org.openapitools.client.model.ShopOrderTaxLines;

/**
 * ShopOrder
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-03T11:14:37.017890013+01:00[Europe/Amsterdam]")
public class ShopOrder {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_PARENT_ID = "parent_id";
  @SerializedName(SERIALIZED_NAME_PARENT_ID)
  private Integer parentId;

  public static final String SERIALIZED_NAME_NUMBER = "number";
  @SerializedName(SERIALIZED_NAME_NUMBER)
  private String number;

  public static final String SERIALIZED_NAME_ORDER_KEY = "order_key";
  @SerializedName(SERIALIZED_NAME_ORDER_KEY)
  private String orderKey;

  public static final String SERIALIZED_NAME_CREATED_VIA = "created_via";
  @SerializedName(SERIALIZED_NAME_CREATED_VIA)
  private String createdVia;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private Integer version;

  /**
   * Order status.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    PENDING("pending"),
    
    PROCESSING("processing"),
    
    ON_HOLD("on-hold"),
    
    COMPLETED("completed"),
    
    CANCELLED("cancelled"),
    
    REFUNDED("refunded"),
    
    FAILED("failed");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  /**
   * Currency the order was created with, in ISO format.
   */
  @JsonAdapter(CurrencyEnum.Adapter.class)
  public enum CurrencyEnum {
    AED("AED"),
    
    AFN("AFN"),
    
    ALL("ALL"),
    
    AMD("AMD"),
    
    ANG("ANG"),
    
    AOA("AOA"),
    
    ARS("ARS"),
    
    AUD("AUD"),
    
    AWG("AWG"),
    
    AZN("AZN"),
    
    BAM("BAM"),
    
    BBD("BBD"),
    
    BDT("BDT"),
    
    BGN("BGN"),
    
    BHD("BHD"),
    
    BIF("BIF"),
    
    BMD("BMD"),
    
    BND("BND"),
    
    BOB("BOB"),
    
    BRL("BRL"),
    
    BSD("BSD"),
    
    BTC("BTC"),
    
    BTN("BTN"),
    
    BWP("BWP"),
    
    BYR("BYR"),
    
    BYN("BYN"),
    
    BZD("BZD"),
    
    CAD("CAD"),
    
    CDF("CDF"),
    
    CHF("CHF"),
    
    CLP("CLP"),
    
    CNY("CNY"),
    
    COP("COP"),
    
    CRC("CRC"),
    
    CUC("CUC"),
    
    CUP("CUP"),
    
    CVE("CVE"),
    
    CZK("CZK"),
    
    DJF("DJF"),
    
    DKK("DKK"),
    
    DOP("DOP"),
    
    DZD("DZD"),
    
    EGP("EGP"),
    
    ERN("ERN"),
    
    ETB("ETB"),
    
    EUR("EUR"),
    
    FJD("FJD"),
    
    FKP("FKP"),
    
    GBP("GBP"),
    
    GEL("GEL"),
    
    GGP("GGP"),
    
    GHS("GHS"),
    
    GIP("GIP"),
    
    GMD("GMD"),
    
    GNF("GNF"),
    
    GTQ("GTQ"),
    
    GYD("GYD"),
    
    HKD("HKD"),
    
    HNL("HNL"),
    
    HRK("HRK"),
    
    HTG("HTG"),
    
    HUF("HUF"),
    
    IDR("IDR"),
    
    ILS("ILS"),
    
    IMP("IMP"),
    
    INR("INR"),
    
    IQD("IQD"),
    
    IRR("IRR"),
    
    IRT("IRT"),
    
    ISK("ISK"),
    
    JEP("JEP"),
    
    JMD("JMD"),
    
    JOD("JOD"),
    
    JPY("JPY"),
    
    KES("KES"),
    
    KGS("KGS"),
    
    KHR("KHR"),
    
    KMF("KMF"),
    
    KPW("KPW"),
    
    KRW("KRW"),
    
    KWD("KWD"),
    
    KYD("KYD"),
    
    KZT("KZT"),
    
    LAK("LAK"),
    
    LBP("LBP"),
    
    LKR("LKR"),
    
    LRD("LRD"),
    
    LSL("LSL"),
    
    LYD("LYD"),
    
    MAD("MAD"),
    
    MDL("MDL"),
    
    MGA("MGA"),
    
    MKD("MKD"),
    
    MMK("MMK"),
    
    MNT("MNT"),
    
    MOP("MOP"),
    
    MRU("MRU"),
    
    MUR("MUR"),
    
    MVR("MVR"),
    
    MWK("MWK"),
    
    MXN("MXN"),
    
    MYR("MYR"),
    
    MZN("MZN"),
    
    NAD("NAD"),
    
    NGN("NGN"),
    
    NIO("NIO"),
    
    NOK("NOK"),
    
    NPR("NPR"),
    
    NZD("NZD"),
    
    OMR("OMR"),
    
    PAB("PAB"),
    
    PEN("PEN"),
    
    PGK("PGK"),
    
    PHP("PHP"),
    
    PKR("PKR"),
    
    PLN("PLN"),
    
    PRB("PRB"),
    
    PYG("PYG"),
    
    QAR("QAR"),
    
    RON("RON"),
    
    RSD("RSD"),
    
    RUB("RUB"),
    
    RWF("RWF"),
    
    SAR("SAR"),
    
    SBD("SBD"),
    
    SCR("SCR"),
    
    SDG("SDG"),
    
    SEK("SEK"),
    
    SGD("SGD"),
    
    SHP("SHP"),
    
    SLL("SLL"),
    
    SOS("SOS"),
    
    SRD("SRD"),
    
    SSP("SSP"),
    
    STN("STN"),
    
    SYP("SYP"),
    
    SZL("SZL"),
    
    THB("THB"),
    
    TJS("TJS"),
    
    TMT("TMT"),
    
    TND("TND"),
    
    TOP("TOP"),
    
    TRY("TRY"),
    
    TTD("TTD"),
    
    TWD("TWD"),
    
    TZS("TZS"),
    
    UAH("UAH"),
    
    UGX("UGX"),
    
    USD("USD"),
    
    UYU("UYU"),
    
    UZS("UZS"),
    
    VEF("VEF"),
    
    VES("VES"),
    
    VND("VND"),
    
    VUV("VUV"),
    
    WST("WST"),
    
    XAF("XAF"),
    
    XCD("XCD"),
    
    XOF("XOF"),
    
    XPF("XPF"),
    
    YER("YER"),
    
    ZAR("ZAR"),
    
    ZMW("ZMW");

    private String value;

    CurrencyEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CurrencyEnum fromValue(String value) {
      for (CurrencyEnum b : CurrencyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CurrencyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CurrencyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CurrencyEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CurrencyEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private CurrencyEnum currency;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private String dateCreated;

  public static final String SERIALIZED_NAME_DATE_CREATED_GMT = "date_created_gmt";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED_GMT)
  private String dateCreatedGmt;

  public static final String SERIALIZED_NAME_DATE_MODIFIED = "date_modified";
  @SerializedName(SERIALIZED_NAME_DATE_MODIFIED)
  private String dateModified;

  public static final String SERIALIZED_NAME_DATE_MODIFIED_GMT = "date_modified_gmt";
  @SerializedName(SERIALIZED_NAME_DATE_MODIFIED_GMT)
  private String dateModifiedGmt;

  public static final String SERIALIZED_NAME_DISCOUNT_TOTAL = "discount_total";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_TOTAL)
  private String discountTotal;

  public static final String SERIALIZED_NAME_DISCOUNT_TAX = "discount_tax";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_TAX)
  private String discountTax;

  public static final String SERIALIZED_NAME_SHIPPING_TOTAL = "shipping_total";
  @SerializedName(SERIALIZED_NAME_SHIPPING_TOTAL)
  private String shippingTotal;

  public static final String SERIALIZED_NAME_SHIPPING_TAX = "shipping_tax";
  @SerializedName(SERIALIZED_NAME_SHIPPING_TAX)
  private String shippingTax;

  public static final String SERIALIZED_NAME_CART_TAX = "cart_tax";
  @SerializedName(SERIALIZED_NAME_CART_TAX)
  private String cartTax;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private String total;

  public static final String SERIALIZED_NAME_TOTAL_TAX = "total_tax";
  @SerializedName(SERIALIZED_NAME_TOTAL_TAX)
  private String totalTax;

  public static final String SERIALIZED_NAME_PRICES_INCLUDE_TAX = "prices_include_tax";
  @SerializedName(SERIALIZED_NAME_PRICES_INCLUDE_TAX)
  private Boolean pricesIncludeTax;

  public static final String SERIALIZED_NAME_CUSTOMER_ID = "customer_id";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ID)
  private Integer customerId;

  public static final String SERIALIZED_NAME_CUSTOMER_IP_ADDRESS = "customer_ip_address";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_IP_ADDRESS)
  private String customerIpAddress;

  public static final String SERIALIZED_NAME_CUSTOMER_USER_AGENT = "customer_user_agent";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_USER_AGENT)
  private String customerUserAgent;

  public static final String SERIALIZED_NAME_CUSTOMER_NOTE = "customer_note";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_NOTE)
  private String customerNote;

  public static final String SERIALIZED_NAME_BILLING = "billing";
  @SerializedName(SERIALIZED_NAME_BILLING)
  private OrdersBilling billing;

  public static final String SERIALIZED_NAME_SHIPPING = "shipping";
  @SerializedName(SERIALIZED_NAME_SHIPPING)
  private OrdersShipping shipping;

  public static final String SERIALIZED_NAME_PAYMENT_METHOD = "payment_method";
  @SerializedName(SERIALIZED_NAME_PAYMENT_METHOD)
  private String paymentMethod;

  public static final String SERIALIZED_NAME_PAYMENT_METHOD_TITLE = "payment_method_title";
  @SerializedName(SERIALIZED_NAME_PAYMENT_METHOD_TITLE)
  private String paymentMethodTitle;

  public static final String SERIALIZED_NAME_TRANSACTION_ID = "transaction_id";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
  private String transactionId;

  public static final String SERIALIZED_NAME_DATE_PAID = "date_paid";
  @SerializedName(SERIALIZED_NAME_DATE_PAID)
  private String datePaid;

  public static final String SERIALIZED_NAME_DATE_PAID_GMT = "date_paid_gmt";
  @SerializedName(SERIALIZED_NAME_DATE_PAID_GMT)
  private String datePaidGmt;

  public static final String SERIALIZED_NAME_DATE_COMPLETED = "date_completed";
  @SerializedName(SERIALIZED_NAME_DATE_COMPLETED)
  private String dateCompleted;

  public static final String SERIALIZED_NAME_DATE_COMPLETED_GMT = "date_completed_gmt";
  @SerializedName(SERIALIZED_NAME_DATE_COMPLETED_GMT)
  private String dateCompletedGmt;

  public static final String SERIALIZED_NAME_CART_HASH = "cart_hash";
  @SerializedName(SERIALIZED_NAME_CART_HASH)
  private String cartHash;

  public static final String SERIALIZED_NAME_META_DATA = "meta_data";
  @SerializedName(SERIALIZED_NAME_META_DATA)
  private List<CouponsMetaData> metaData = null;

  public static final String SERIALIZED_NAME_LINE_ITEMS = "line_items";
  @SerializedName(SERIALIZED_NAME_LINE_ITEMS)
  private List<OrdersLineItems> lineItems = null;

  public static final String SERIALIZED_NAME_TAX_LINES = "tax_lines";
  @SerializedName(SERIALIZED_NAME_TAX_LINES)
  private List<ShopOrderTaxLines> taxLines = null;

  public static final String SERIALIZED_NAME_SHIPPING_LINES = "shipping_lines";
  @SerializedName(SERIALIZED_NAME_SHIPPING_LINES)
  private List<OrdersShippingLines> shippingLines = null;

  public static final String SERIALIZED_NAME_FEE_LINES = "fee_lines";
  @SerializedName(SERIALIZED_NAME_FEE_LINES)
  private List<OrdersFeeLines> feeLines = null;

  public static final String SERIALIZED_NAME_COUPON_LINES = "coupon_lines";
  @SerializedName(SERIALIZED_NAME_COUPON_LINES)
  private List<OrdersCouponLines> couponLines = null;

  public static final String SERIALIZED_NAME_REFUNDS = "refunds";
  @SerializedName(SERIALIZED_NAME_REFUNDS)
  private List<ShopOrderRefunds> refunds = null;

  public static final String SERIALIZED_NAME_SET_PAID = "set_paid";
  @SerializedName(SERIALIZED_NAME_SET_PAID)
  private Boolean setPaid;


  public ShopOrder id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique identifier for the resource.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier for the resource.")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public ShopOrder parentId(Integer parentId) {
    
    this.parentId = parentId;
    return this;
  }

   /**
   * Parent order ID.
   * @return parentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Parent order ID.")

  public Integer getParentId() {
    return parentId;
  }


  public void setParentId(Integer parentId) {
    this.parentId = parentId;
  }


  public ShopOrder number(String number) {
    
    this.number = number;
    return this;
  }

   /**
   * Order number.
   * @return number
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Order number.")

  public String getNumber() {
    return number;
  }


  public void setNumber(String number) {
    this.number = number;
  }


  public ShopOrder orderKey(String orderKey) {
    
    this.orderKey = orderKey;
    return this;
  }

   /**
   * Order key.
   * @return orderKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Order key.")

  public String getOrderKey() {
    return orderKey;
  }


  public void setOrderKey(String orderKey) {
    this.orderKey = orderKey;
  }


  public ShopOrder createdVia(String createdVia) {
    
    this.createdVia = createdVia;
    return this;
  }

   /**
   * Shows where the order was created.
   * @return createdVia
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shows where the order was created.")

  public String getCreatedVia() {
    return createdVia;
  }


  public void setCreatedVia(String createdVia) {
    this.createdVia = createdVia;
  }


  public ShopOrder version(Integer version) {
    
    this.version = version;
    return this;
  }

   /**
   * Version of WooCommerce which last updated the order.
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Version of WooCommerce which last updated the order.")

  public Integer getVersion() {
    return version;
  }


  public void setVersion(Integer version) {
    this.version = version;
  }


  public ShopOrder status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Order status.
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Order status.")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public ShopOrder currency(CurrencyEnum currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Currency the order was created with, in ISO format.
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Currency the order was created with, in ISO format.")

  public CurrencyEnum getCurrency() {
    return currency;
  }


  public void setCurrency(CurrencyEnum currency) {
    this.currency = currency;
  }


  public ShopOrder dateCreated(String dateCreated) {
    
    this.dateCreated = dateCreated;
    return this;
  }

   /**
   * The date the order was created, in the site&#39;s timezone.
   * @return dateCreated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date the order was created, in the site's timezone.")

  public String getDateCreated() {
    return dateCreated;
  }


  public void setDateCreated(String dateCreated) {
    this.dateCreated = dateCreated;
  }


  public ShopOrder dateCreatedGmt(String dateCreatedGmt) {
    
    this.dateCreatedGmt = dateCreatedGmt;
    return this;
  }

   /**
   * The date the order was created, as GMT.
   * @return dateCreatedGmt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date the order was created, as GMT.")

  public String getDateCreatedGmt() {
    return dateCreatedGmt;
  }


  public void setDateCreatedGmt(String dateCreatedGmt) {
    this.dateCreatedGmt = dateCreatedGmt;
  }


  public ShopOrder dateModified(String dateModified) {
    
    this.dateModified = dateModified;
    return this;
  }

   /**
   * The date the order was last modified, in the site&#39;s timezone.
   * @return dateModified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date the order was last modified, in the site's timezone.")

  public String getDateModified() {
    return dateModified;
  }


  public void setDateModified(String dateModified) {
    this.dateModified = dateModified;
  }


  public ShopOrder dateModifiedGmt(String dateModifiedGmt) {
    
    this.dateModifiedGmt = dateModifiedGmt;
    return this;
  }

   /**
   * The date the order was last modified, as GMT.
   * @return dateModifiedGmt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date the order was last modified, as GMT.")

  public String getDateModifiedGmt() {
    return dateModifiedGmt;
  }


  public void setDateModifiedGmt(String dateModifiedGmt) {
    this.dateModifiedGmt = dateModifiedGmt;
  }


  public ShopOrder discountTotal(String discountTotal) {
    
    this.discountTotal = discountTotal;
    return this;
  }

   /**
   * Total discount amount for the order.
   * @return discountTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total discount amount for the order.")

  public String getDiscountTotal() {
    return discountTotal;
  }


  public void setDiscountTotal(String discountTotal) {
    this.discountTotal = discountTotal;
  }


  public ShopOrder discountTax(String discountTax) {
    
    this.discountTax = discountTax;
    return this;
  }

   /**
   * Total discount tax amount for the order.
   * @return discountTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total discount tax amount for the order.")

  public String getDiscountTax() {
    return discountTax;
  }


  public void setDiscountTax(String discountTax) {
    this.discountTax = discountTax;
  }


  public ShopOrder shippingTotal(String shippingTotal) {
    
    this.shippingTotal = shippingTotal;
    return this;
  }

   /**
   * Total shipping amount for the order.
   * @return shippingTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total shipping amount for the order.")

  public String getShippingTotal() {
    return shippingTotal;
  }


  public void setShippingTotal(String shippingTotal) {
    this.shippingTotal = shippingTotal;
  }


  public ShopOrder shippingTax(String shippingTax) {
    
    this.shippingTax = shippingTax;
    return this;
  }

   /**
   * Total shipping tax amount for the order.
   * @return shippingTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total shipping tax amount for the order.")

  public String getShippingTax() {
    return shippingTax;
  }


  public void setShippingTax(String shippingTax) {
    this.shippingTax = shippingTax;
  }


  public ShopOrder cartTax(String cartTax) {
    
    this.cartTax = cartTax;
    return this;
  }

   /**
   * Sum of line item taxes only.
   * @return cartTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Sum of line item taxes only.")

  public String getCartTax() {
    return cartTax;
  }


  public void setCartTax(String cartTax) {
    this.cartTax = cartTax;
  }


  public ShopOrder total(String total) {
    
    this.total = total;
    return this;
  }

   /**
   * Grand total.
   * @return total
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Grand total.")

  public String getTotal() {
    return total;
  }


  public void setTotal(String total) {
    this.total = total;
  }


  public ShopOrder totalTax(String totalTax) {
    
    this.totalTax = totalTax;
    return this;
  }

   /**
   * Sum of all taxes.
   * @return totalTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Sum of all taxes.")

  public String getTotalTax() {
    return totalTax;
  }


  public void setTotalTax(String totalTax) {
    this.totalTax = totalTax;
  }


  public ShopOrder pricesIncludeTax(Boolean pricesIncludeTax) {
    
    this.pricesIncludeTax = pricesIncludeTax;
    return this;
  }

   /**
   * True the prices included tax during checkout.
   * @return pricesIncludeTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True the prices included tax during checkout.")

  public Boolean getPricesIncludeTax() {
    return pricesIncludeTax;
  }


  public void setPricesIncludeTax(Boolean pricesIncludeTax) {
    this.pricesIncludeTax = pricesIncludeTax;
  }


  public ShopOrder customerId(Integer customerId) {
    
    this.customerId = customerId;
    return this;
  }

   /**
   * User ID who owns the order. 0 for guests.
   * @return customerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User ID who owns the order. 0 for guests.")

  public Integer getCustomerId() {
    return customerId;
  }


  public void setCustomerId(Integer customerId) {
    this.customerId = customerId;
  }


  public ShopOrder customerIpAddress(String customerIpAddress) {
    
    this.customerIpAddress = customerIpAddress;
    return this;
  }

   /**
   * Customer&#39;s IP address.
   * @return customerIpAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Customer's IP address.")

  public String getCustomerIpAddress() {
    return customerIpAddress;
  }


  public void setCustomerIpAddress(String customerIpAddress) {
    this.customerIpAddress = customerIpAddress;
  }


  public ShopOrder customerUserAgent(String customerUserAgent) {
    
    this.customerUserAgent = customerUserAgent;
    return this;
  }

   /**
   * User agent of the customer.
   * @return customerUserAgent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User agent of the customer.")

  public String getCustomerUserAgent() {
    return customerUserAgent;
  }


  public void setCustomerUserAgent(String customerUserAgent) {
    this.customerUserAgent = customerUserAgent;
  }


  public ShopOrder customerNote(String customerNote) {
    
    this.customerNote = customerNote;
    return this;
  }

   /**
   * Note left by customer during checkout.
   * @return customerNote
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Note left by customer during checkout.")

  public String getCustomerNote() {
    return customerNote;
  }


  public void setCustomerNote(String customerNote) {
    this.customerNote = customerNote;
  }


  public ShopOrder billing(OrdersBilling billing) {
    
    this.billing = billing;
    return this;
  }

   /**
   * Get billing
   * @return billing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OrdersBilling getBilling() {
    return billing;
  }


  public void setBilling(OrdersBilling billing) {
    this.billing = billing;
  }


  public ShopOrder shipping(OrdersShipping shipping) {
    
    this.shipping = shipping;
    return this;
  }

   /**
   * Get shipping
   * @return shipping
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OrdersShipping getShipping() {
    return shipping;
  }


  public void setShipping(OrdersShipping shipping) {
    this.shipping = shipping;
  }


  public ShopOrder paymentMethod(String paymentMethod) {
    
    this.paymentMethod = paymentMethod;
    return this;
  }

   /**
   * Payment method ID.
   * @return paymentMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Payment method ID.")

  public String getPaymentMethod() {
    return paymentMethod;
  }


  public void setPaymentMethod(String paymentMethod) {
    this.paymentMethod = paymentMethod;
  }


  public ShopOrder paymentMethodTitle(String paymentMethodTitle) {
    
    this.paymentMethodTitle = paymentMethodTitle;
    return this;
  }

   /**
   * Payment method title.
   * @return paymentMethodTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Payment method title.")

  public String getPaymentMethodTitle() {
    return paymentMethodTitle;
  }


  public void setPaymentMethodTitle(String paymentMethodTitle) {
    this.paymentMethodTitle = paymentMethodTitle;
  }


  public ShopOrder transactionId(String transactionId) {
    
    this.transactionId = transactionId;
    return this;
  }

   /**
   * Unique transaction ID.
   * @return transactionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique transaction ID.")

  public String getTransactionId() {
    return transactionId;
  }


  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }


  public ShopOrder datePaid(String datePaid) {
    
    this.datePaid = datePaid;
    return this;
  }

   /**
   * The date the order was paid, in the site&#39;s timezone.
   * @return datePaid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date the order was paid, in the site's timezone.")

  public String getDatePaid() {
    return datePaid;
  }


  public void setDatePaid(String datePaid) {
    this.datePaid = datePaid;
  }


  public ShopOrder datePaidGmt(String datePaidGmt) {
    
    this.datePaidGmt = datePaidGmt;
    return this;
  }

   /**
   * The date the order was paid, as GMT.
   * @return datePaidGmt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date the order was paid, as GMT.")

  public String getDatePaidGmt() {
    return datePaidGmt;
  }


  public void setDatePaidGmt(String datePaidGmt) {
    this.datePaidGmt = datePaidGmt;
  }


  public ShopOrder dateCompleted(String dateCompleted) {
    
    this.dateCompleted = dateCompleted;
    return this;
  }

   /**
   * The date the order was completed, in the site&#39;s timezone.
   * @return dateCompleted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date the order was completed, in the site's timezone.")

  public String getDateCompleted() {
    return dateCompleted;
  }


  public void setDateCompleted(String dateCompleted) {
    this.dateCompleted = dateCompleted;
  }


  public ShopOrder dateCompletedGmt(String dateCompletedGmt) {
    
    this.dateCompletedGmt = dateCompletedGmt;
    return this;
  }

   /**
   * The date the order was completed, as GMT.
   * @return dateCompletedGmt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date the order was completed, as GMT.")

  public String getDateCompletedGmt() {
    return dateCompletedGmt;
  }


  public void setDateCompletedGmt(String dateCompletedGmt) {
    this.dateCompletedGmt = dateCompletedGmt;
  }


  public ShopOrder cartHash(String cartHash) {
    
    this.cartHash = cartHash;
    return this;
  }

   /**
   * MD5 hash of cart items to ensure orders are not modified.
   * @return cartHash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "MD5 hash of cart items to ensure orders are not modified.")

  public String getCartHash() {
    return cartHash;
  }


  public void setCartHash(String cartHash) {
    this.cartHash = cartHash;
  }


  public ShopOrder metaData(List<CouponsMetaData> metaData) {
    
    this.metaData = metaData;
    return this;
  }

  public ShopOrder addMetaDataItem(CouponsMetaData metaDataItem) {
    if (this.metaData == null) {
      this.metaData = new ArrayList<CouponsMetaData>();
    }
    this.metaData.add(metaDataItem);
    return this;
  }

   /**
   * Meta data.
   * @return metaData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Meta data.")

  public List<CouponsMetaData> getMetaData() {
    return metaData;
  }


  public void setMetaData(List<CouponsMetaData> metaData) {
    this.metaData = metaData;
  }


  public ShopOrder lineItems(List<OrdersLineItems> lineItems) {
    
    this.lineItems = lineItems;
    return this;
  }

  public ShopOrder addLineItemsItem(OrdersLineItems lineItemsItem) {
    if (this.lineItems == null) {
      this.lineItems = new ArrayList<OrdersLineItems>();
    }
    this.lineItems.add(lineItemsItem);
    return this;
  }

   /**
   * Line items data.
   * @return lineItems
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Line items data.")

  public List<OrdersLineItems> getLineItems() {
    return lineItems;
  }


  public void setLineItems(List<OrdersLineItems> lineItems) {
    this.lineItems = lineItems;
  }


  public ShopOrder taxLines(List<ShopOrderTaxLines> taxLines) {
    
    this.taxLines = taxLines;
    return this;
  }

  public ShopOrder addTaxLinesItem(ShopOrderTaxLines taxLinesItem) {
    if (this.taxLines == null) {
      this.taxLines = new ArrayList<ShopOrderTaxLines>();
    }
    this.taxLines.add(taxLinesItem);
    return this;
  }

   /**
   * Tax lines data.
   * @return taxLines
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tax lines data.")

  public List<ShopOrderTaxLines> getTaxLines() {
    return taxLines;
  }


  public void setTaxLines(List<ShopOrderTaxLines> taxLines) {
    this.taxLines = taxLines;
  }


  public ShopOrder shippingLines(List<OrdersShippingLines> shippingLines) {
    
    this.shippingLines = shippingLines;
    return this;
  }

  public ShopOrder addShippingLinesItem(OrdersShippingLines shippingLinesItem) {
    if (this.shippingLines == null) {
      this.shippingLines = new ArrayList<OrdersShippingLines>();
    }
    this.shippingLines.add(shippingLinesItem);
    return this;
  }

   /**
   * Shipping lines data.
   * @return shippingLines
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shipping lines data.")

  public List<OrdersShippingLines> getShippingLines() {
    return shippingLines;
  }


  public void setShippingLines(List<OrdersShippingLines> shippingLines) {
    this.shippingLines = shippingLines;
  }


  public ShopOrder feeLines(List<OrdersFeeLines> feeLines) {
    
    this.feeLines = feeLines;
    return this;
  }

  public ShopOrder addFeeLinesItem(OrdersFeeLines feeLinesItem) {
    if (this.feeLines == null) {
      this.feeLines = new ArrayList<OrdersFeeLines>();
    }
    this.feeLines.add(feeLinesItem);
    return this;
  }

   /**
   * Fee lines data.
   * @return feeLines
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Fee lines data.")

  public List<OrdersFeeLines> getFeeLines() {
    return feeLines;
  }


  public void setFeeLines(List<OrdersFeeLines> feeLines) {
    this.feeLines = feeLines;
  }


  public ShopOrder couponLines(List<OrdersCouponLines> couponLines) {
    
    this.couponLines = couponLines;
    return this;
  }

  public ShopOrder addCouponLinesItem(OrdersCouponLines couponLinesItem) {
    if (this.couponLines == null) {
      this.couponLines = new ArrayList<OrdersCouponLines>();
    }
    this.couponLines.add(couponLinesItem);
    return this;
  }

   /**
   * Coupons line data.
   * @return couponLines
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Coupons line data.")

  public List<OrdersCouponLines> getCouponLines() {
    return couponLines;
  }


  public void setCouponLines(List<OrdersCouponLines> couponLines) {
    this.couponLines = couponLines;
  }


  public ShopOrder refunds(List<ShopOrderRefunds> refunds) {
    
    this.refunds = refunds;
    return this;
  }

  public ShopOrder addRefundsItem(ShopOrderRefunds refundsItem) {
    if (this.refunds == null) {
      this.refunds = new ArrayList<ShopOrderRefunds>();
    }
    this.refunds.add(refundsItem);
    return this;
  }

   /**
   * List of refunds.
   * @return refunds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of refunds.")

  public List<ShopOrderRefunds> getRefunds() {
    return refunds;
  }


  public void setRefunds(List<ShopOrderRefunds> refunds) {
    this.refunds = refunds;
  }


  public ShopOrder setPaid(Boolean setPaid) {
    
    this.setPaid = setPaid;
    return this;
  }

   /**
   * Define if the order is paid. It will set the status to processing and reduce stock items.
   * @return setPaid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Define if the order is paid. It will set the status to processing and reduce stock items.")

  public Boolean getSetPaid() {
    return setPaid;
  }


  public void setSetPaid(Boolean setPaid) {
    this.setPaid = setPaid;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShopOrder shopOrder = (ShopOrder) o;
    return Objects.equals(this.id, shopOrder.id) &&
        Objects.equals(this.parentId, shopOrder.parentId) &&
        Objects.equals(this.number, shopOrder.number) &&
        Objects.equals(this.orderKey, shopOrder.orderKey) &&
        Objects.equals(this.createdVia, shopOrder.createdVia) &&
        Objects.equals(this.version, shopOrder.version) &&
        Objects.equals(this.status, shopOrder.status) &&
        Objects.equals(this.currency, shopOrder.currency) &&
        Objects.equals(this.dateCreated, shopOrder.dateCreated) &&
        Objects.equals(this.dateCreatedGmt, shopOrder.dateCreatedGmt) &&
        Objects.equals(this.dateModified, shopOrder.dateModified) &&
        Objects.equals(this.dateModifiedGmt, shopOrder.dateModifiedGmt) &&
        Objects.equals(this.discountTotal, shopOrder.discountTotal) &&
        Objects.equals(this.discountTax, shopOrder.discountTax) &&
        Objects.equals(this.shippingTotal, shopOrder.shippingTotal) &&
        Objects.equals(this.shippingTax, shopOrder.shippingTax) &&
        Objects.equals(this.cartTax, shopOrder.cartTax) &&
        Objects.equals(this.total, shopOrder.total) &&
        Objects.equals(this.totalTax, shopOrder.totalTax) &&
        Objects.equals(this.pricesIncludeTax, shopOrder.pricesIncludeTax) &&
        Objects.equals(this.customerId, shopOrder.customerId) &&
        Objects.equals(this.customerIpAddress, shopOrder.customerIpAddress) &&
        Objects.equals(this.customerUserAgent, shopOrder.customerUserAgent) &&
        Objects.equals(this.customerNote, shopOrder.customerNote) &&
        Objects.equals(this.billing, shopOrder.billing) &&
        Objects.equals(this.shipping, shopOrder.shipping) &&
        Objects.equals(this.paymentMethod, shopOrder.paymentMethod) &&
        Objects.equals(this.paymentMethodTitle, shopOrder.paymentMethodTitle) &&
        Objects.equals(this.transactionId, shopOrder.transactionId) &&
        Objects.equals(this.datePaid, shopOrder.datePaid) &&
        Objects.equals(this.datePaidGmt, shopOrder.datePaidGmt) &&
        Objects.equals(this.dateCompleted, shopOrder.dateCompleted) &&
        Objects.equals(this.dateCompletedGmt, shopOrder.dateCompletedGmt) &&
        Objects.equals(this.cartHash, shopOrder.cartHash) &&
        Objects.equals(this.metaData, shopOrder.metaData) &&
        Objects.equals(this.lineItems, shopOrder.lineItems) &&
        Objects.equals(this.taxLines, shopOrder.taxLines) &&
        Objects.equals(this.shippingLines, shopOrder.shippingLines) &&
        Objects.equals(this.feeLines, shopOrder.feeLines) &&
        Objects.equals(this.couponLines, shopOrder.couponLines) &&
        Objects.equals(this.refunds, shopOrder.refunds) &&
        Objects.equals(this.setPaid, shopOrder.setPaid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, parentId, number, orderKey, createdVia, version, status, currency, dateCreated, dateCreatedGmt, dateModified, dateModifiedGmt, discountTotal, discountTax, shippingTotal, shippingTax, cartTax, total, totalTax, pricesIncludeTax, customerId, customerIpAddress, customerUserAgent, customerNote, billing, shipping, paymentMethod, paymentMethodTitle, transactionId, datePaid, datePaidGmt, dateCompleted, dateCompletedGmt, cartHash, metaData, lineItems, taxLines, shippingLines, feeLines, couponLines, refunds, setPaid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShopOrder {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    orderKey: ").append(toIndentedString(orderKey)).append("\n");
    sb.append("    createdVia: ").append(toIndentedString(createdVia)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateCreatedGmt: ").append(toIndentedString(dateCreatedGmt)).append("\n");
    sb.append("    dateModified: ").append(toIndentedString(dateModified)).append("\n");
    sb.append("    dateModifiedGmt: ").append(toIndentedString(dateModifiedGmt)).append("\n");
    sb.append("    discountTotal: ").append(toIndentedString(discountTotal)).append("\n");
    sb.append("    discountTax: ").append(toIndentedString(discountTax)).append("\n");
    sb.append("    shippingTotal: ").append(toIndentedString(shippingTotal)).append("\n");
    sb.append("    shippingTax: ").append(toIndentedString(shippingTax)).append("\n");
    sb.append("    cartTax: ").append(toIndentedString(cartTax)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    totalTax: ").append(toIndentedString(totalTax)).append("\n");
    sb.append("    pricesIncludeTax: ").append(toIndentedString(pricesIncludeTax)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    customerIpAddress: ").append(toIndentedString(customerIpAddress)).append("\n");
    sb.append("    customerUserAgent: ").append(toIndentedString(customerUserAgent)).append("\n");
    sb.append("    customerNote: ").append(toIndentedString(customerNote)).append("\n");
    sb.append("    billing: ").append(toIndentedString(billing)).append("\n");
    sb.append("    shipping: ").append(toIndentedString(shipping)).append("\n");
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("    paymentMethodTitle: ").append(toIndentedString(paymentMethodTitle)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    datePaid: ").append(toIndentedString(datePaid)).append("\n");
    sb.append("    datePaidGmt: ").append(toIndentedString(datePaidGmt)).append("\n");
    sb.append("    dateCompleted: ").append(toIndentedString(dateCompleted)).append("\n");
    sb.append("    dateCompletedGmt: ").append(toIndentedString(dateCompletedGmt)).append("\n");
    sb.append("    cartHash: ").append(toIndentedString(cartHash)).append("\n");
    sb.append("    metaData: ").append(toIndentedString(metaData)).append("\n");
    sb.append("    lineItems: ").append(toIndentedString(lineItems)).append("\n");
    sb.append("    taxLines: ").append(toIndentedString(taxLines)).append("\n");
    sb.append("    shippingLines: ").append(toIndentedString(shippingLines)).append("\n");
    sb.append("    feeLines: ").append(toIndentedString(feeLines)).append("\n");
    sb.append("    couponLines: ").append(toIndentedString(couponLines)).append("\n");
    sb.append("    refunds: ").append(toIndentedString(refunds)).append("\n");
    sb.append("    setPaid: ").append(toIndentedString(setPaid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

