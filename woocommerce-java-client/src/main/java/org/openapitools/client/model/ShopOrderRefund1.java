/*
 * wc/v3
 * OpenAPI documented, based on generated OpenAPI document of the namespace wc/v3 with some manual fixes.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.CouponsMetaData;

/**
 * ShopOrderRefund1
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-03T11:14:37.017890013+01:00[Europe/Amsterdam]")
public class ShopOrderRefund1 {
  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private String amount;

  public static final String SERIALIZED_NAME_REASON = "reason";
  @SerializedName(SERIALIZED_NAME_REASON)
  private String reason;

  public static final String SERIALIZED_NAME_REFUNDED_BY = "refunded_by";
  @SerializedName(SERIALIZED_NAME_REFUNDED_BY)
  private Integer refundedBy;

  public static final String SERIALIZED_NAME_META_DATA = "meta_data";
  @SerializedName(SERIALIZED_NAME_META_DATA)
  private List<CouponsMetaData> metaData = null;

  public static final String SERIALIZED_NAME_API_REFUND = "api_refund";
  @SerializedName(SERIALIZED_NAME_API_REFUND)
  private Boolean apiRefund;

  public static final String SERIALIZED_NAME_API_RESTOCK = "api_restock";
  @SerializedName(SERIALIZED_NAME_API_RESTOCK)
  private Boolean apiRestock;


  public ShopOrderRefund1 amount(String amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Refund amount.
   * @return amount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Refund amount.")

  public String getAmount() {
    return amount;
  }


  public void setAmount(String amount) {
    this.amount = amount;
  }


  public ShopOrderRefund1 reason(String reason) {
    
    this.reason = reason;
    return this;
  }

   /**
   * Reason for refund.
   * @return reason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reason for refund.")

  public String getReason() {
    return reason;
  }


  public void setReason(String reason) {
    this.reason = reason;
  }


  public ShopOrderRefund1 refundedBy(Integer refundedBy) {
    
    this.refundedBy = refundedBy;
    return this;
  }

   /**
   * User ID of user who created the refund.
   * @return refundedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User ID of user who created the refund.")

  public Integer getRefundedBy() {
    return refundedBy;
  }


  public void setRefundedBy(Integer refundedBy) {
    this.refundedBy = refundedBy;
  }


  public ShopOrderRefund1 metaData(List<CouponsMetaData> metaData) {
    
    this.metaData = metaData;
    return this;
  }

  public ShopOrderRefund1 addMetaDataItem(CouponsMetaData metaDataItem) {
    if (this.metaData == null) {
      this.metaData = new ArrayList<CouponsMetaData>();
    }
    this.metaData.add(metaDataItem);
    return this;
  }

   /**
   * Meta data.
   * @return metaData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Meta data.")

  public List<CouponsMetaData> getMetaData() {
    return metaData;
  }


  public void setMetaData(List<CouponsMetaData> metaData) {
    this.metaData = metaData;
  }


  public ShopOrderRefund1 apiRefund(Boolean apiRefund) {
    
    this.apiRefund = apiRefund;
    return this;
  }

   /**
   * When true, the payment gateway API is used to generate the refund.
   * @return apiRefund
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "When true, the payment gateway API is used to generate the refund.")

  public Boolean getApiRefund() {
    return apiRefund;
  }


  public void setApiRefund(Boolean apiRefund) {
    this.apiRefund = apiRefund;
  }


  public ShopOrderRefund1 apiRestock(Boolean apiRestock) {
    
    this.apiRestock = apiRestock;
    return this;
  }

   /**
   * When true, refunded items are restocked.
   * @return apiRestock
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "When true, refunded items are restocked.")

  public Boolean getApiRestock() {
    return apiRestock;
  }


  public void setApiRestock(Boolean apiRestock) {
    this.apiRestock = apiRestock;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShopOrderRefund1 shopOrderRefund1 = (ShopOrderRefund1) o;
    return Objects.equals(this.amount, shopOrderRefund1.amount) &&
        Objects.equals(this.reason, shopOrderRefund1.reason) &&
        Objects.equals(this.refundedBy, shopOrderRefund1.refundedBy) &&
        Objects.equals(this.metaData, shopOrderRefund1.metaData) &&
        Objects.equals(this.apiRefund, shopOrderRefund1.apiRefund) &&
        Objects.equals(this.apiRestock, shopOrderRefund1.apiRestock);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, reason, refundedBy, metaData, apiRefund, apiRestock);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShopOrderRefund1 {\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    refundedBy: ").append(toIndentedString(refundedBy)).append("\n");
    sb.append("    metaData: ").append(toIndentedString(metaData)).append("\n");
    sb.append("    apiRefund: ").append(toIndentedString(apiRefund)).append("\n");
    sb.append("    apiRestock: ").append(toIndentedString(apiRestock)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

