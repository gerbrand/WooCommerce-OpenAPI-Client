/*
 * wc/v3
 * OpenAPI documented, based on generated OpenAPI document of the namespace wc/v3 with some manual fixes.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Settings.
 */
@ApiModel(description = "Settings.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-03T11:14:37.017890013+01:00[Europe/Amsterdam]")
public class SystemStatusSettings {
  public static final String SERIALIZED_NAME_API_ENABLED = "api_enabled";
  @SerializedName(SERIALIZED_NAME_API_ENABLED)
  private Boolean apiEnabled;

  public static final String SERIALIZED_NAME_FORCE_SSL = "force_ssl";
  @SerializedName(SERIALIZED_NAME_FORCE_SSL)
  private Boolean forceSsl;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_CURRENCY_SYMBOL = "currency_symbol";
  @SerializedName(SERIALIZED_NAME_CURRENCY_SYMBOL)
  private String currencySymbol;

  public static final String SERIALIZED_NAME_CURRENCY_POSITION = "currency_position";
  @SerializedName(SERIALIZED_NAME_CURRENCY_POSITION)
  private String currencyPosition;

  public static final String SERIALIZED_NAME_THOUSAND_SEPARATOR = "thousand_separator";
  @SerializedName(SERIALIZED_NAME_THOUSAND_SEPARATOR)
  private String thousandSeparator;

  public static final String SERIALIZED_NAME_DECIMAL_SEPARATOR = "decimal_separator";
  @SerializedName(SERIALIZED_NAME_DECIMAL_SEPARATOR)
  private String decimalSeparator;

  public static final String SERIALIZED_NAME_NUMBER_OF_DECIMALS = "number_of_decimals";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_DECIMALS)
  private Integer numberOfDecimals;

  public static final String SERIALIZED_NAME_GEOLOCATION_ENABLED = "geolocation_enabled";
  @SerializedName(SERIALIZED_NAME_GEOLOCATION_ENABLED)
  private Boolean geolocationEnabled;

  public static final String SERIALIZED_NAME_TAXONOMIES = "taxonomies";
  @SerializedName(SERIALIZED_NAME_TAXONOMIES)
  private List<String> taxonomies = null;

  public static final String SERIALIZED_NAME_PRODUCT_VISIBILITY_TERMS = "product_visibility_terms";
  @SerializedName(SERIALIZED_NAME_PRODUCT_VISIBILITY_TERMS)
  private List<String> productVisibilityTerms = null;


  public SystemStatusSettings apiEnabled(Boolean apiEnabled) {
    
    this.apiEnabled = apiEnabled;
    return this;
  }

   /**
   * REST API enabled?
   * @return apiEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "REST API enabled?")

  public Boolean getApiEnabled() {
    return apiEnabled;
  }


  public void setApiEnabled(Boolean apiEnabled) {
    this.apiEnabled = apiEnabled;
  }


  public SystemStatusSettings forceSsl(Boolean forceSsl) {
    
    this.forceSsl = forceSsl;
    return this;
  }

   /**
   * SSL forced?
   * @return forceSsl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "SSL forced?")

  public Boolean getForceSsl() {
    return forceSsl;
  }


  public void setForceSsl(Boolean forceSsl) {
    this.forceSsl = forceSsl;
  }


  public SystemStatusSettings currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Currency.
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Currency.")

  public String getCurrency() {
    return currency;
  }


  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public SystemStatusSettings currencySymbol(String currencySymbol) {
    
    this.currencySymbol = currencySymbol;
    return this;
  }

   /**
   * Currency symbol.
   * @return currencySymbol
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Currency symbol.")

  public String getCurrencySymbol() {
    return currencySymbol;
  }


  public void setCurrencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
  }


  public SystemStatusSettings currencyPosition(String currencyPosition) {
    
    this.currencyPosition = currencyPosition;
    return this;
  }

   /**
   * Currency position.
   * @return currencyPosition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Currency position.")

  public String getCurrencyPosition() {
    return currencyPosition;
  }


  public void setCurrencyPosition(String currencyPosition) {
    this.currencyPosition = currencyPosition;
  }


  public SystemStatusSettings thousandSeparator(String thousandSeparator) {
    
    this.thousandSeparator = thousandSeparator;
    return this;
  }

   /**
   * Thousand separator.
   * @return thousandSeparator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Thousand separator.")

  public String getThousandSeparator() {
    return thousandSeparator;
  }


  public void setThousandSeparator(String thousandSeparator) {
    this.thousandSeparator = thousandSeparator;
  }


  public SystemStatusSettings decimalSeparator(String decimalSeparator) {
    
    this.decimalSeparator = decimalSeparator;
    return this;
  }

   /**
   * Decimal separator.
   * @return decimalSeparator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Decimal separator.")

  public String getDecimalSeparator() {
    return decimalSeparator;
  }


  public void setDecimalSeparator(String decimalSeparator) {
    this.decimalSeparator = decimalSeparator;
  }


  public SystemStatusSettings numberOfDecimals(Integer numberOfDecimals) {
    
    this.numberOfDecimals = numberOfDecimals;
    return this;
  }

   /**
   * Number of decimals.
   * @return numberOfDecimals
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of decimals.")

  public Integer getNumberOfDecimals() {
    return numberOfDecimals;
  }


  public void setNumberOfDecimals(Integer numberOfDecimals) {
    this.numberOfDecimals = numberOfDecimals;
  }


  public SystemStatusSettings geolocationEnabled(Boolean geolocationEnabled) {
    
    this.geolocationEnabled = geolocationEnabled;
    return this;
  }

   /**
   * Geolocation enabled?
   * @return geolocationEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Geolocation enabled?")

  public Boolean getGeolocationEnabled() {
    return geolocationEnabled;
  }


  public void setGeolocationEnabled(Boolean geolocationEnabled) {
    this.geolocationEnabled = geolocationEnabled;
  }


  public SystemStatusSettings taxonomies(List<String> taxonomies) {
    
    this.taxonomies = taxonomies;
    return this;
  }

  public SystemStatusSettings addTaxonomiesItem(String taxonomiesItem) {
    if (this.taxonomies == null) {
      this.taxonomies = new ArrayList<String>();
    }
    this.taxonomies.add(taxonomiesItem);
    return this;
  }

   /**
   * Taxonomy terms for product/order statuses.
   * @return taxonomies
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Taxonomy terms for product/order statuses.")

  public List<String> getTaxonomies() {
    return taxonomies;
  }


  public void setTaxonomies(List<String> taxonomies) {
    this.taxonomies = taxonomies;
  }


  public SystemStatusSettings productVisibilityTerms(List<String> productVisibilityTerms) {
    
    this.productVisibilityTerms = productVisibilityTerms;
    return this;
  }

  public SystemStatusSettings addProductVisibilityTermsItem(String productVisibilityTermsItem) {
    if (this.productVisibilityTerms == null) {
      this.productVisibilityTerms = new ArrayList<String>();
    }
    this.productVisibilityTerms.add(productVisibilityTermsItem);
    return this;
  }

   /**
   * Terms in the product visibility taxonomy.
   * @return productVisibilityTerms
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Terms in the product visibility taxonomy.")

  public List<String> getProductVisibilityTerms() {
    return productVisibilityTerms;
  }


  public void setProductVisibilityTerms(List<String> productVisibilityTerms) {
    this.productVisibilityTerms = productVisibilityTerms;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SystemStatusSettings systemStatusSettings = (SystemStatusSettings) o;
    return Objects.equals(this.apiEnabled, systemStatusSettings.apiEnabled) &&
        Objects.equals(this.forceSsl, systemStatusSettings.forceSsl) &&
        Objects.equals(this.currency, systemStatusSettings.currency) &&
        Objects.equals(this.currencySymbol, systemStatusSettings.currencySymbol) &&
        Objects.equals(this.currencyPosition, systemStatusSettings.currencyPosition) &&
        Objects.equals(this.thousandSeparator, systemStatusSettings.thousandSeparator) &&
        Objects.equals(this.decimalSeparator, systemStatusSettings.decimalSeparator) &&
        Objects.equals(this.numberOfDecimals, systemStatusSettings.numberOfDecimals) &&
        Objects.equals(this.geolocationEnabled, systemStatusSettings.geolocationEnabled) &&
        Objects.equals(this.taxonomies, systemStatusSettings.taxonomies) &&
        Objects.equals(this.productVisibilityTerms, systemStatusSettings.productVisibilityTerms);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiEnabled, forceSsl, currency, currencySymbol, currencyPosition, thousandSeparator, decimalSeparator, numberOfDecimals, geolocationEnabled, taxonomies, productVisibilityTerms);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SystemStatusSettings {\n");
    sb.append("    apiEnabled: ").append(toIndentedString(apiEnabled)).append("\n");
    sb.append("    forceSsl: ").append(toIndentedString(forceSsl)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    currencySymbol: ").append(toIndentedString(currencySymbol)).append("\n");
    sb.append("    currencyPosition: ").append(toIndentedString(currencyPosition)).append("\n");
    sb.append("    thousandSeparator: ").append(toIndentedString(thousandSeparator)).append("\n");
    sb.append("    decimalSeparator: ").append(toIndentedString(decimalSeparator)).append("\n");
    sb.append("    numberOfDecimals: ").append(toIndentedString(numberOfDecimals)).append("\n");
    sb.append("    geolocationEnabled: ").append(toIndentedString(geolocationEnabled)).append("\n");
    sb.append("    taxonomies: ").append(toIndentedString(taxonomies)).append("\n");
    sb.append("    productVisibilityTerms: ").append(toIndentedString(productVisibilityTerms)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

