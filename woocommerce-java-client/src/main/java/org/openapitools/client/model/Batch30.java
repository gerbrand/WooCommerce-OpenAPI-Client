/*
 * wc/v3
 * OpenAPI documented, based on generated OpenAPI document of the namespace wc/v3 with some manual fixes.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.CouponsMetaData;
import org.openapitools.client.model.ProductsAttributes;
import org.openapitools.client.model.ProductsCategories;
import org.openapitools.client.model.ProductsDefaultAttributes;
import org.openapitools.client.model.ProductsDimensions;
import org.openapitools.client.model.ProductsDownloads;
import org.openapitools.client.model.ProductsImages;
import org.openapitools.client.model.ProductsTags;

/**
 * Batch30
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-03T11:14:37.017890013+01:00[Europe/Amsterdam]")
public class Batch30 {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SLUG = "slug";
  @SerializedName(SERIALIZED_NAME_SLUG)
  private String slug;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private String dateCreated;

  public static final String SERIALIZED_NAME_DATE_CREATED_GMT = "date_created_gmt";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED_GMT)
  private String dateCreatedGmt;

  /**
   * Product type.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    SIMPLE("simple"),
    
    GROUPED("grouped"),
    
    EXTERNAL("external"),
    
    VARIABLE("variable");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  /**
   * Product status (post status).
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    DRAFT("draft"),
    
    PENDING("pending"),
    
    PRIVATE("private"),
    
    PUBLISH("publish"),
    
    FUTURE("future");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_FEATURED = "featured";
  @SerializedName(SERIALIZED_NAME_FEATURED)
  private Boolean featured;

  /**
   * Catalog visibility.
   */
  @JsonAdapter(CatalogVisibilityEnum.Adapter.class)
  public enum CatalogVisibilityEnum {
    VISIBLE("visible"),
    
    CATALOG("catalog"),
    
    SEARCH("search"),
    
    HIDDEN("hidden");

    private String value;

    CatalogVisibilityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CatalogVisibilityEnum fromValue(String value) {
      for (CatalogVisibilityEnum b : CatalogVisibilityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CatalogVisibilityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CatalogVisibilityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CatalogVisibilityEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CatalogVisibilityEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CATALOG_VISIBILITY = "catalog_visibility";
  @SerializedName(SERIALIZED_NAME_CATALOG_VISIBILITY)
  private CatalogVisibilityEnum catalogVisibility;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_SHORT_DESCRIPTION = "short_description";
  @SerializedName(SERIALIZED_NAME_SHORT_DESCRIPTION)
  private String shortDescription;

  public static final String SERIALIZED_NAME_SKU = "sku";
  @SerializedName(SERIALIZED_NAME_SKU)
  private String sku;

  public static final String SERIALIZED_NAME_REGULAR_PRICE = "regular_price";
  @SerializedName(SERIALIZED_NAME_REGULAR_PRICE)
  private String regularPrice;

  public static final String SERIALIZED_NAME_SALE_PRICE = "sale_price";
  @SerializedName(SERIALIZED_NAME_SALE_PRICE)
  private String salePrice;

  public static final String SERIALIZED_NAME_DATE_ON_SALE_FROM = "date_on_sale_from";
  @SerializedName(SERIALIZED_NAME_DATE_ON_SALE_FROM)
  private String dateOnSaleFrom;

  public static final String SERIALIZED_NAME_DATE_ON_SALE_FROM_GMT = "date_on_sale_from_gmt";
  @SerializedName(SERIALIZED_NAME_DATE_ON_SALE_FROM_GMT)
  private String dateOnSaleFromGmt;

  public static final String SERIALIZED_NAME_DATE_ON_SALE_TO = "date_on_sale_to";
  @SerializedName(SERIALIZED_NAME_DATE_ON_SALE_TO)
  private String dateOnSaleTo;

  public static final String SERIALIZED_NAME_DATE_ON_SALE_TO_GMT = "date_on_sale_to_gmt";
  @SerializedName(SERIALIZED_NAME_DATE_ON_SALE_TO_GMT)
  private String dateOnSaleToGmt;

  public static final String SERIALIZED_NAME_VIRTUAL = "virtual";
  @SerializedName(SERIALIZED_NAME_VIRTUAL)
  private Boolean virtual;

  public static final String SERIALIZED_NAME_DOWNLOADABLE = "downloadable";
  @SerializedName(SERIALIZED_NAME_DOWNLOADABLE)
  private Boolean downloadable;

  public static final String SERIALIZED_NAME_DOWNLOADS = "downloads";
  @SerializedName(SERIALIZED_NAME_DOWNLOADS)
  private List<ProductsDownloads> downloads = null;

  public static final String SERIALIZED_NAME_DOWNLOAD_LIMIT = "download_limit";
  @SerializedName(SERIALIZED_NAME_DOWNLOAD_LIMIT)
  private Integer downloadLimit;

  public static final String SERIALIZED_NAME_DOWNLOAD_EXPIRY = "download_expiry";
  @SerializedName(SERIALIZED_NAME_DOWNLOAD_EXPIRY)
  private Integer downloadExpiry;

  public static final String SERIALIZED_NAME_EXTERNAL_URL = "external_url";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_URL)
  private URI externalUrl;

  public static final String SERIALIZED_NAME_BUTTON_TEXT = "button_text";
  @SerializedName(SERIALIZED_NAME_BUTTON_TEXT)
  private String buttonText;

  /**
   * Tax status.
   */
  @JsonAdapter(TaxStatusEnum.Adapter.class)
  public enum TaxStatusEnum {
    TAXABLE("taxable"),
    
    SHIPPING("shipping"),
    
    NONE("none");

    private String value;

    TaxStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TaxStatusEnum fromValue(String value) {
      for (TaxStatusEnum b : TaxStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TaxStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TaxStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TaxStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TaxStatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TAX_STATUS = "tax_status";
  @SerializedName(SERIALIZED_NAME_TAX_STATUS)
  private TaxStatusEnum taxStatus;

  public static final String SERIALIZED_NAME_TAX_CLASS = "tax_class";
  @SerializedName(SERIALIZED_NAME_TAX_CLASS)
  private String taxClass;

  public static final String SERIALIZED_NAME_MANAGE_STOCK = "manage_stock";
  @SerializedName(SERIALIZED_NAME_MANAGE_STOCK)
  private Boolean manageStock;

  public static final String SERIALIZED_NAME_STOCK_QUANTITY = "stock_quantity";
  @SerializedName(SERIALIZED_NAME_STOCK_QUANTITY)
  private Integer stockQuantity;

  /**
   * Controls the stock status of the product.
   */
  @JsonAdapter(StockStatusEnum.Adapter.class)
  public enum StockStatusEnum {
    INSTOCK("instock"),
    
    OUTOFSTOCK("outofstock"),
    
    ONBACKORDER("onbackorder");

    private String value;

    StockStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StockStatusEnum fromValue(String value) {
      for (StockStatusEnum b : StockStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StockStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StockStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StockStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StockStatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STOCK_STATUS = "stock_status";
  @SerializedName(SERIALIZED_NAME_STOCK_STATUS)
  private StockStatusEnum stockStatus;

  /**
   * If managing stock, this controls if backorders are allowed.
   */
  @JsonAdapter(BackordersEnum.Adapter.class)
  public enum BackordersEnum {
    NO("no"),
    
    NOTIFY("notify"),
    
    YES("yes");

    private String value;

    BackordersEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static BackordersEnum fromValue(String value) {
      for (BackordersEnum b : BackordersEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<BackordersEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BackordersEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public BackordersEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return BackordersEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_BACKORDERS = "backorders";
  @SerializedName(SERIALIZED_NAME_BACKORDERS)
  private BackordersEnum backorders;

  public static final String SERIALIZED_NAME_LOW_STOCK_AMOUNT = "low_stock_amount";
  @SerializedName(SERIALIZED_NAME_LOW_STOCK_AMOUNT)
  private Integer lowStockAmount;

  public static final String SERIALIZED_NAME_SOLD_INDIVIDUALLY = "sold_individually";
  @SerializedName(SERIALIZED_NAME_SOLD_INDIVIDUALLY)
  private Boolean soldIndividually;

  public static final String SERIALIZED_NAME_WEIGHT = "weight";
  @SerializedName(SERIALIZED_NAME_WEIGHT)
  private String weight;

  public static final String SERIALIZED_NAME_DIMENSIONS = "dimensions";
  @SerializedName(SERIALIZED_NAME_DIMENSIONS)
  private ProductsDimensions dimensions;

  public static final String SERIALIZED_NAME_SHIPPING_CLASS = "shipping_class";
  @SerializedName(SERIALIZED_NAME_SHIPPING_CLASS)
  private String shippingClass;

  public static final String SERIALIZED_NAME_REVIEWS_ALLOWED = "reviews_allowed";
  @SerializedName(SERIALIZED_NAME_REVIEWS_ALLOWED)
  private Boolean reviewsAllowed;

  public static final String SERIALIZED_NAME_UPSELL_IDS = "upsell_ids";
  @SerializedName(SERIALIZED_NAME_UPSELL_IDS)
  private List<Integer> upsellIds = null;

  public static final String SERIALIZED_NAME_CROSS_SELL_IDS = "cross_sell_ids";
  @SerializedName(SERIALIZED_NAME_CROSS_SELL_IDS)
  private List<Integer> crossSellIds = null;

  public static final String SERIALIZED_NAME_PARENT_ID = "parent_id";
  @SerializedName(SERIALIZED_NAME_PARENT_ID)
  private Integer parentId;

  public static final String SERIALIZED_NAME_PURCHASE_NOTE = "purchase_note";
  @SerializedName(SERIALIZED_NAME_PURCHASE_NOTE)
  private String purchaseNote;

  public static final String SERIALIZED_NAME_CATEGORIES = "categories";
  @SerializedName(SERIALIZED_NAME_CATEGORIES)
  private List<ProductsCategories> categories = null;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<ProductsTags> tags = null;

  public static final String SERIALIZED_NAME_IMAGES = "images";
  @SerializedName(SERIALIZED_NAME_IMAGES)
  private List<ProductsImages> images = null;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private List<ProductsAttributes> attributes = null;

  public static final String SERIALIZED_NAME_DEFAULT_ATTRIBUTES = "default_attributes";
  @SerializedName(SERIALIZED_NAME_DEFAULT_ATTRIBUTES)
  private List<ProductsDefaultAttributes> defaultAttributes = null;

  public static final String SERIALIZED_NAME_MENU_ORDER = "menu_order";
  @SerializedName(SERIALIZED_NAME_MENU_ORDER)
  private Integer menuOrder;

  public static final String SERIALIZED_NAME_META_DATA = "meta_data";
  @SerializedName(SERIALIZED_NAME_META_DATA)
  private List<CouponsMetaData> metaData = null;


  public Batch30 name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Product name.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Product name.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Batch30 slug(String slug) {
    
    this.slug = slug;
    return this;
  }

   /**
   * Product slug.
   * @return slug
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Product slug.")

  public String getSlug() {
    return slug;
  }


  public void setSlug(String slug) {
    this.slug = slug;
  }


  public Batch30 dateCreated(String dateCreated) {
    
    this.dateCreated = dateCreated;
    return this;
  }

   /**
   * The date the product was created, in the site&#39;s timezone.
   * @return dateCreated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date the product was created, in the site's timezone.")

  public String getDateCreated() {
    return dateCreated;
  }


  public void setDateCreated(String dateCreated) {
    this.dateCreated = dateCreated;
  }


  public Batch30 dateCreatedGmt(String dateCreatedGmt) {
    
    this.dateCreatedGmt = dateCreatedGmt;
    return this;
  }

   /**
   * The date the product was created, as GMT.
   * @return dateCreatedGmt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date the product was created, as GMT.")

  public String getDateCreatedGmt() {
    return dateCreatedGmt;
  }


  public void setDateCreatedGmt(String dateCreatedGmt) {
    this.dateCreatedGmt = dateCreatedGmt;
  }


  public Batch30 type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Product type.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Product type.")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public Batch30 status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Product status (post status).
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Product status (post status).")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public Batch30 featured(Boolean featured) {
    
    this.featured = featured;
    return this;
  }

   /**
   * Featured product.
   * @return featured
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Featured product.")

  public Boolean getFeatured() {
    return featured;
  }


  public void setFeatured(Boolean featured) {
    this.featured = featured;
  }


  public Batch30 catalogVisibility(CatalogVisibilityEnum catalogVisibility) {
    
    this.catalogVisibility = catalogVisibility;
    return this;
  }

   /**
   * Catalog visibility.
   * @return catalogVisibility
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Catalog visibility.")

  public CatalogVisibilityEnum getCatalogVisibility() {
    return catalogVisibility;
  }


  public void setCatalogVisibility(CatalogVisibilityEnum catalogVisibility) {
    this.catalogVisibility = catalogVisibility;
  }


  public Batch30 description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Product description.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Product description.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public Batch30 shortDescription(String shortDescription) {
    
    this.shortDescription = shortDescription;
    return this;
  }

   /**
   * Product short description.
   * @return shortDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Product short description.")

  public String getShortDescription() {
    return shortDescription;
  }


  public void setShortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
  }


  public Batch30 sku(String sku) {
    
    this.sku = sku;
    return this;
  }

   /**
   * Unique identifier.
   * @return sku
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier.")

  public String getSku() {
    return sku;
  }


  public void setSku(String sku) {
    this.sku = sku;
  }


  public Batch30 regularPrice(String regularPrice) {
    
    this.regularPrice = regularPrice;
    return this;
  }

   /**
   * Product regular price.
   * @return regularPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Product regular price.")

  public String getRegularPrice() {
    return regularPrice;
  }


  public void setRegularPrice(String regularPrice) {
    this.regularPrice = regularPrice;
  }


  public Batch30 salePrice(String salePrice) {
    
    this.salePrice = salePrice;
    return this;
  }

   /**
   * Product sale price.
   * @return salePrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Product sale price.")

  public String getSalePrice() {
    return salePrice;
  }


  public void setSalePrice(String salePrice) {
    this.salePrice = salePrice;
  }


  public Batch30 dateOnSaleFrom(String dateOnSaleFrom) {
    
    this.dateOnSaleFrom = dateOnSaleFrom;
    return this;
  }

   /**
   * Start date of sale price, in the site&#39;s timezone.
   * @return dateOnSaleFrom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Start date of sale price, in the site's timezone.")

  public String getDateOnSaleFrom() {
    return dateOnSaleFrom;
  }


  public void setDateOnSaleFrom(String dateOnSaleFrom) {
    this.dateOnSaleFrom = dateOnSaleFrom;
  }


  public Batch30 dateOnSaleFromGmt(String dateOnSaleFromGmt) {
    
    this.dateOnSaleFromGmt = dateOnSaleFromGmt;
    return this;
  }

   /**
   * Start date of sale price, as GMT.
   * @return dateOnSaleFromGmt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Start date of sale price, as GMT.")

  public String getDateOnSaleFromGmt() {
    return dateOnSaleFromGmt;
  }


  public void setDateOnSaleFromGmt(String dateOnSaleFromGmt) {
    this.dateOnSaleFromGmt = dateOnSaleFromGmt;
  }


  public Batch30 dateOnSaleTo(String dateOnSaleTo) {
    
    this.dateOnSaleTo = dateOnSaleTo;
    return this;
  }

   /**
   * End date of sale price, in the site&#39;s timezone.
   * @return dateOnSaleTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "End date of sale price, in the site's timezone.")

  public String getDateOnSaleTo() {
    return dateOnSaleTo;
  }


  public void setDateOnSaleTo(String dateOnSaleTo) {
    this.dateOnSaleTo = dateOnSaleTo;
  }


  public Batch30 dateOnSaleToGmt(String dateOnSaleToGmt) {
    
    this.dateOnSaleToGmt = dateOnSaleToGmt;
    return this;
  }

   /**
   * End date of sale price, in the site&#39;s timezone.
   * @return dateOnSaleToGmt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "End date of sale price, in the site's timezone.")

  public String getDateOnSaleToGmt() {
    return dateOnSaleToGmt;
  }


  public void setDateOnSaleToGmt(String dateOnSaleToGmt) {
    this.dateOnSaleToGmt = dateOnSaleToGmt;
  }


  public Batch30 virtual(Boolean virtual) {
    
    this.virtual = virtual;
    return this;
  }

   /**
   * If the product is virtual.
   * @return virtual
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If the product is virtual.")

  public Boolean getVirtual() {
    return virtual;
  }


  public void setVirtual(Boolean virtual) {
    this.virtual = virtual;
  }


  public Batch30 downloadable(Boolean downloadable) {
    
    this.downloadable = downloadable;
    return this;
  }

   /**
   * If the product is downloadable.
   * @return downloadable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If the product is downloadable.")

  public Boolean getDownloadable() {
    return downloadable;
  }


  public void setDownloadable(Boolean downloadable) {
    this.downloadable = downloadable;
  }


  public Batch30 downloads(List<ProductsDownloads> downloads) {
    
    this.downloads = downloads;
    return this;
  }

  public Batch30 addDownloadsItem(ProductsDownloads downloadsItem) {
    if (this.downloads == null) {
      this.downloads = new ArrayList<ProductsDownloads>();
    }
    this.downloads.add(downloadsItem);
    return this;
  }

   /**
   * List of downloadable files.
   * @return downloads
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of downloadable files.")

  public List<ProductsDownloads> getDownloads() {
    return downloads;
  }


  public void setDownloads(List<ProductsDownloads> downloads) {
    this.downloads = downloads;
  }


  public Batch30 downloadLimit(Integer downloadLimit) {
    
    this.downloadLimit = downloadLimit;
    return this;
  }

   /**
   * Number of times downloadable files can be downloaded after purchase.
   * @return downloadLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of times downloadable files can be downloaded after purchase.")

  public Integer getDownloadLimit() {
    return downloadLimit;
  }


  public void setDownloadLimit(Integer downloadLimit) {
    this.downloadLimit = downloadLimit;
  }


  public Batch30 downloadExpiry(Integer downloadExpiry) {
    
    this.downloadExpiry = downloadExpiry;
    return this;
  }

   /**
   * Number of days until access to downloadable files expires.
   * @return downloadExpiry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of days until access to downloadable files expires.")

  public Integer getDownloadExpiry() {
    return downloadExpiry;
  }


  public void setDownloadExpiry(Integer downloadExpiry) {
    this.downloadExpiry = downloadExpiry;
  }


  public Batch30 externalUrl(URI externalUrl) {
    
    this.externalUrl = externalUrl;
    return this;
  }

   /**
   * Product external URL. Only for external products.
   * @return externalUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Product external URL. Only for external products.")

  public URI getExternalUrl() {
    return externalUrl;
  }


  public void setExternalUrl(URI externalUrl) {
    this.externalUrl = externalUrl;
  }


  public Batch30 buttonText(String buttonText) {
    
    this.buttonText = buttonText;
    return this;
  }

   /**
   * Product external button text. Only for external products.
   * @return buttonText
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Product external button text. Only for external products.")

  public String getButtonText() {
    return buttonText;
  }


  public void setButtonText(String buttonText) {
    this.buttonText = buttonText;
  }


  public Batch30 taxStatus(TaxStatusEnum taxStatus) {
    
    this.taxStatus = taxStatus;
    return this;
  }

   /**
   * Tax status.
   * @return taxStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tax status.")

  public TaxStatusEnum getTaxStatus() {
    return taxStatus;
  }


  public void setTaxStatus(TaxStatusEnum taxStatus) {
    this.taxStatus = taxStatus;
  }


  public Batch30 taxClass(String taxClass) {
    
    this.taxClass = taxClass;
    return this;
  }

   /**
   * Tax class.
   * @return taxClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tax class.")

  public String getTaxClass() {
    return taxClass;
  }


  public void setTaxClass(String taxClass) {
    this.taxClass = taxClass;
  }


  public Batch30 manageStock(Boolean manageStock) {
    
    this.manageStock = manageStock;
    return this;
  }

   /**
   * Stock management at product level.
   * @return manageStock
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Stock management at product level.")

  public Boolean getManageStock() {
    return manageStock;
  }


  public void setManageStock(Boolean manageStock) {
    this.manageStock = manageStock;
  }


  public Batch30 stockQuantity(Integer stockQuantity) {
    
    this.stockQuantity = stockQuantity;
    return this;
  }

   /**
   * Stock quantity.
   * @return stockQuantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Stock quantity.")

  public Integer getStockQuantity() {
    return stockQuantity;
  }


  public void setStockQuantity(Integer stockQuantity) {
    this.stockQuantity = stockQuantity;
  }


  public Batch30 stockStatus(StockStatusEnum stockStatus) {
    
    this.stockStatus = stockStatus;
    return this;
  }

   /**
   * Controls the stock status of the product.
   * @return stockStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Controls the stock status of the product.")

  public StockStatusEnum getStockStatus() {
    return stockStatus;
  }


  public void setStockStatus(StockStatusEnum stockStatus) {
    this.stockStatus = stockStatus;
  }


  public Batch30 backorders(BackordersEnum backorders) {
    
    this.backorders = backorders;
    return this;
  }

   /**
   * If managing stock, this controls if backorders are allowed.
   * @return backorders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If managing stock, this controls if backorders are allowed.")

  public BackordersEnum getBackorders() {
    return backorders;
  }


  public void setBackorders(BackordersEnum backorders) {
    this.backorders = backorders;
  }


  public Batch30 lowStockAmount(Integer lowStockAmount) {
    
    this.lowStockAmount = lowStockAmount;
    return this;
  }

   /**
   * Low Stock amount for the product.
   * @return lowStockAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Low Stock amount for the product.")

  public Integer getLowStockAmount() {
    return lowStockAmount;
  }


  public void setLowStockAmount(Integer lowStockAmount) {
    this.lowStockAmount = lowStockAmount;
  }


  public Batch30 soldIndividually(Boolean soldIndividually) {
    
    this.soldIndividually = soldIndividually;
    return this;
  }

   /**
   * Allow one item to be bought in a single order.
   * @return soldIndividually
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Allow one item to be bought in a single order.")

  public Boolean getSoldIndividually() {
    return soldIndividually;
  }


  public void setSoldIndividually(Boolean soldIndividually) {
    this.soldIndividually = soldIndividually;
  }


  public Batch30 weight(String weight) {
    
    this.weight = weight;
    return this;
  }

   /**
   * Product weight (kg).
   * @return weight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Product weight (kg).")

  public String getWeight() {
    return weight;
  }


  public void setWeight(String weight) {
    this.weight = weight;
  }


  public Batch30 dimensions(ProductsDimensions dimensions) {
    
    this.dimensions = dimensions;
    return this;
  }

   /**
   * Get dimensions
   * @return dimensions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ProductsDimensions getDimensions() {
    return dimensions;
  }


  public void setDimensions(ProductsDimensions dimensions) {
    this.dimensions = dimensions;
  }


  public Batch30 shippingClass(String shippingClass) {
    
    this.shippingClass = shippingClass;
    return this;
  }

   /**
   * Shipping class slug.
   * @return shippingClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shipping class slug.")

  public String getShippingClass() {
    return shippingClass;
  }


  public void setShippingClass(String shippingClass) {
    this.shippingClass = shippingClass;
  }


  public Batch30 reviewsAllowed(Boolean reviewsAllowed) {
    
    this.reviewsAllowed = reviewsAllowed;
    return this;
  }

   /**
   * Allow reviews.
   * @return reviewsAllowed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Allow reviews.")

  public Boolean getReviewsAllowed() {
    return reviewsAllowed;
  }


  public void setReviewsAllowed(Boolean reviewsAllowed) {
    this.reviewsAllowed = reviewsAllowed;
  }


  public Batch30 upsellIds(List<Integer> upsellIds) {
    
    this.upsellIds = upsellIds;
    return this;
  }

  public Batch30 addUpsellIdsItem(Integer upsellIdsItem) {
    if (this.upsellIds == null) {
      this.upsellIds = new ArrayList<Integer>();
    }
    this.upsellIds.add(upsellIdsItem);
    return this;
  }

   /**
   * List of up-sell products IDs.
   * @return upsellIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of up-sell products IDs.")

  public List<Integer> getUpsellIds() {
    return upsellIds;
  }


  public void setUpsellIds(List<Integer> upsellIds) {
    this.upsellIds = upsellIds;
  }


  public Batch30 crossSellIds(List<Integer> crossSellIds) {
    
    this.crossSellIds = crossSellIds;
    return this;
  }

  public Batch30 addCrossSellIdsItem(Integer crossSellIdsItem) {
    if (this.crossSellIds == null) {
      this.crossSellIds = new ArrayList<Integer>();
    }
    this.crossSellIds.add(crossSellIdsItem);
    return this;
  }

   /**
   * List of cross-sell products IDs.
   * @return crossSellIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of cross-sell products IDs.")

  public List<Integer> getCrossSellIds() {
    return crossSellIds;
  }


  public void setCrossSellIds(List<Integer> crossSellIds) {
    this.crossSellIds = crossSellIds;
  }


  public Batch30 parentId(Integer parentId) {
    
    this.parentId = parentId;
    return this;
  }

   /**
   * Product parent ID.
   * @return parentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Product parent ID.")

  public Integer getParentId() {
    return parentId;
  }


  public void setParentId(Integer parentId) {
    this.parentId = parentId;
  }


  public Batch30 purchaseNote(String purchaseNote) {
    
    this.purchaseNote = purchaseNote;
    return this;
  }

   /**
   * Optional note to send the customer after purchase.
   * @return purchaseNote
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Optional note to send the customer after purchase.")

  public String getPurchaseNote() {
    return purchaseNote;
  }


  public void setPurchaseNote(String purchaseNote) {
    this.purchaseNote = purchaseNote;
  }


  public Batch30 categories(List<ProductsCategories> categories) {
    
    this.categories = categories;
    return this;
  }

  public Batch30 addCategoriesItem(ProductsCategories categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<ProductsCategories>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

   /**
   * List of categories.
   * @return categories
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of categories.")

  public List<ProductsCategories> getCategories() {
    return categories;
  }


  public void setCategories(List<ProductsCategories> categories) {
    this.categories = categories;
  }


  public Batch30 tags(List<ProductsTags> tags) {
    
    this.tags = tags;
    return this;
  }

  public Batch30 addTagsItem(ProductsTags tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<ProductsTags>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * List of tags.
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of tags.")

  public List<ProductsTags> getTags() {
    return tags;
  }


  public void setTags(List<ProductsTags> tags) {
    this.tags = tags;
  }


  public Batch30 images(List<ProductsImages> images) {
    
    this.images = images;
    return this;
  }

  public Batch30 addImagesItem(ProductsImages imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<ProductsImages>();
    }
    this.images.add(imagesItem);
    return this;
  }

   /**
   * List of images.
   * @return images
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of images.")

  public List<ProductsImages> getImages() {
    return images;
  }


  public void setImages(List<ProductsImages> images) {
    this.images = images;
  }


  public Batch30 attributes(List<ProductsAttributes> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public Batch30 addAttributesItem(ProductsAttributes attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<ProductsAttributes>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

   /**
   * List of attributes.
   * @return attributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of attributes.")

  public List<ProductsAttributes> getAttributes() {
    return attributes;
  }


  public void setAttributes(List<ProductsAttributes> attributes) {
    this.attributes = attributes;
  }


  public Batch30 defaultAttributes(List<ProductsDefaultAttributes> defaultAttributes) {
    
    this.defaultAttributes = defaultAttributes;
    return this;
  }

  public Batch30 addDefaultAttributesItem(ProductsDefaultAttributes defaultAttributesItem) {
    if (this.defaultAttributes == null) {
      this.defaultAttributes = new ArrayList<ProductsDefaultAttributes>();
    }
    this.defaultAttributes.add(defaultAttributesItem);
    return this;
  }

   /**
   * Defaults variation attributes.
   * @return defaultAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Defaults variation attributes.")

  public List<ProductsDefaultAttributes> getDefaultAttributes() {
    return defaultAttributes;
  }


  public void setDefaultAttributes(List<ProductsDefaultAttributes> defaultAttributes) {
    this.defaultAttributes = defaultAttributes;
  }


  public Batch30 menuOrder(Integer menuOrder) {
    
    this.menuOrder = menuOrder;
    return this;
  }

   /**
   * Menu order, used to custom sort products.
   * @return menuOrder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Menu order, used to custom sort products.")

  public Integer getMenuOrder() {
    return menuOrder;
  }


  public void setMenuOrder(Integer menuOrder) {
    this.menuOrder = menuOrder;
  }


  public Batch30 metaData(List<CouponsMetaData> metaData) {
    
    this.metaData = metaData;
    return this;
  }

  public Batch30 addMetaDataItem(CouponsMetaData metaDataItem) {
    if (this.metaData == null) {
      this.metaData = new ArrayList<CouponsMetaData>();
    }
    this.metaData.add(metaDataItem);
    return this;
  }

   /**
   * Meta data.
   * @return metaData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Meta data.")

  public List<CouponsMetaData> getMetaData() {
    return metaData;
  }


  public void setMetaData(List<CouponsMetaData> metaData) {
    this.metaData = metaData;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Batch30 batch30 = (Batch30) o;
    return Objects.equals(this.name, batch30.name) &&
        Objects.equals(this.slug, batch30.slug) &&
        Objects.equals(this.dateCreated, batch30.dateCreated) &&
        Objects.equals(this.dateCreatedGmt, batch30.dateCreatedGmt) &&
        Objects.equals(this.type, batch30.type) &&
        Objects.equals(this.status, batch30.status) &&
        Objects.equals(this.featured, batch30.featured) &&
        Objects.equals(this.catalogVisibility, batch30.catalogVisibility) &&
        Objects.equals(this.description, batch30.description) &&
        Objects.equals(this.shortDescription, batch30.shortDescription) &&
        Objects.equals(this.sku, batch30.sku) &&
        Objects.equals(this.regularPrice, batch30.regularPrice) &&
        Objects.equals(this.salePrice, batch30.salePrice) &&
        Objects.equals(this.dateOnSaleFrom, batch30.dateOnSaleFrom) &&
        Objects.equals(this.dateOnSaleFromGmt, batch30.dateOnSaleFromGmt) &&
        Objects.equals(this.dateOnSaleTo, batch30.dateOnSaleTo) &&
        Objects.equals(this.dateOnSaleToGmt, batch30.dateOnSaleToGmt) &&
        Objects.equals(this.virtual, batch30.virtual) &&
        Objects.equals(this.downloadable, batch30.downloadable) &&
        Objects.equals(this.downloads, batch30.downloads) &&
        Objects.equals(this.downloadLimit, batch30.downloadLimit) &&
        Objects.equals(this.downloadExpiry, batch30.downloadExpiry) &&
        Objects.equals(this.externalUrl, batch30.externalUrl) &&
        Objects.equals(this.buttonText, batch30.buttonText) &&
        Objects.equals(this.taxStatus, batch30.taxStatus) &&
        Objects.equals(this.taxClass, batch30.taxClass) &&
        Objects.equals(this.manageStock, batch30.manageStock) &&
        Objects.equals(this.stockQuantity, batch30.stockQuantity) &&
        Objects.equals(this.stockStatus, batch30.stockStatus) &&
        Objects.equals(this.backorders, batch30.backorders) &&
        Objects.equals(this.lowStockAmount, batch30.lowStockAmount) &&
        Objects.equals(this.soldIndividually, batch30.soldIndividually) &&
        Objects.equals(this.weight, batch30.weight) &&
        Objects.equals(this.dimensions, batch30.dimensions) &&
        Objects.equals(this.shippingClass, batch30.shippingClass) &&
        Objects.equals(this.reviewsAllowed, batch30.reviewsAllowed) &&
        Objects.equals(this.upsellIds, batch30.upsellIds) &&
        Objects.equals(this.crossSellIds, batch30.crossSellIds) &&
        Objects.equals(this.parentId, batch30.parentId) &&
        Objects.equals(this.purchaseNote, batch30.purchaseNote) &&
        Objects.equals(this.categories, batch30.categories) &&
        Objects.equals(this.tags, batch30.tags) &&
        Objects.equals(this.images, batch30.images) &&
        Objects.equals(this.attributes, batch30.attributes) &&
        Objects.equals(this.defaultAttributes, batch30.defaultAttributes) &&
        Objects.equals(this.menuOrder, batch30.menuOrder) &&
        Objects.equals(this.metaData, batch30.metaData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, slug, dateCreated, dateCreatedGmt, type, status, featured, catalogVisibility, description, shortDescription, sku, regularPrice, salePrice, dateOnSaleFrom, dateOnSaleFromGmt, dateOnSaleTo, dateOnSaleToGmt, virtual, downloadable, downloads, downloadLimit, downloadExpiry, externalUrl, buttonText, taxStatus, taxClass, manageStock, stockQuantity, stockStatus, backorders, lowStockAmount, soldIndividually, weight, dimensions, shippingClass, reviewsAllowed, upsellIds, crossSellIds, parentId, purchaseNote, categories, tags, images, attributes, defaultAttributes, menuOrder, metaData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Batch30 {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateCreatedGmt: ").append(toIndentedString(dateCreatedGmt)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    featured: ").append(toIndentedString(featured)).append("\n");
    sb.append("    catalogVisibility: ").append(toIndentedString(catalogVisibility)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    shortDescription: ").append(toIndentedString(shortDescription)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    regularPrice: ").append(toIndentedString(regularPrice)).append("\n");
    sb.append("    salePrice: ").append(toIndentedString(salePrice)).append("\n");
    sb.append("    dateOnSaleFrom: ").append(toIndentedString(dateOnSaleFrom)).append("\n");
    sb.append("    dateOnSaleFromGmt: ").append(toIndentedString(dateOnSaleFromGmt)).append("\n");
    sb.append("    dateOnSaleTo: ").append(toIndentedString(dateOnSaleTo)).append("\n");
    sb.append("    dateOnSaleToGmt: ").append(toIndentedString(dateOnSaleToGmt)).append("\n");
    sb.append("    virtual: ").append(toIndentedString(virtual)).append("\n");
    sb.append("    downloadable: ").append(toIndentedString(downloadable)).append("\n");
    sb.append("    downloads: ").append(toIndentedString(downloads)).append("\n");
    sb.append("    downloadLimit: ").append(toIndentedString(downloadLimit)).append("\n");
    sb.append("    downloadExpiry: ").append(toIndentedString(downloadExpiry)).append("\n");
    sb.append("    externalUrl: ").append(toIndentedString(externalUrl)).append("\n");
    sb.append("    buttonText: ").append(toIndentedString(buttonText)).append("\n");
    sb.append("    taxStatus: ").append(toIndentedString(taxStatus)).append("\n");
    sb.append("    taxClass: ").append(toIndentedString(taxClass)).append("\n");
    sb.append("    manageStock: ").append(toIndentedString(manageStock)).append("\n");
    sb.append("    stockQuantity: ").append(toIndentedString(stockQuantity)).append("\n");
    sb.append("    stockStatus: ").append(toIndentedString(stockStatus)).append("\n");
    sb.append("    backorders: ").append(toIndentedString(backorders)).append("\n");
    sb.append("    lowStockAmount: ").append(toIndentedString(lowStockAmount)).append("\n");
    sb.append("    soldIndividually: ").append(toIndentedString(soldIndividually)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    dimensions: ").append(toIndentedString(dimensions)).append("\n");
    sb.append("    shippingClass: ").append(toIndentedString(shippingClass)).append("\n");
    sb.append("    reviewsAllowed: ").append(toIndentedString(reviewsAllowed)).append("\n");
    sb.append("    upsellIds: ").append(toIndentedString(upsellIds)).append("\n");
    sb.append("    crossSellIds: ").append(toIndentedString(crossSellIds)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    purchaseNote: ").append(toIndentedString(purchaseNote)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    defaultAttributes: ").append(toIndentedString(defaultAttributes)).append("\n");
    sb.append("    menuOrder: ").append(toIndentedString(menuOrder)).append("\n");
    sb.append("    metaData: ").append(toIndentedString(metaData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

