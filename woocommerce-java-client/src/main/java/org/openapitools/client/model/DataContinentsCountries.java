/*
 * wc/v3
 * OpenAPI documented, based on generated OpenAPI document of the namespace wc/v3 with some manual fixes.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.DataContinentsStates;

/**
 * DataContinentsCountries
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-03T11:14:37.017890013+01:00[Europe/Amsterdam]")
public class DataContinentsCountries {
  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currency_code";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_CURRENCY_POS = "currency_pos";
  @SerializedName(SERIALIZED_NAME_CURRENCY_POS)
  private String currencyPos;

  public static final String SERIALIZED_NAME_DECIMAL_SEP = "decimal_sep";
  @SerializedName(SERIALIZED_NAME_DECIMAL_SEP)
  private String decimalSep;

  public static final String SERIALIZED_NAME_DIMENSION_UNIT = "dimension_unit";
  @SerializedName(SERIALIZED_NAME_DIMENSION_UNIT)
  private String dimensionUnit;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NUM_DECIMALS = "num_decimals";
  @SerializedName(SERIALIZED_NAME_NUM_DECIMALS)
  private Integer numDecimals;

  public static final String SERIALIZED_NAME_STATES = "states";
  @SerializedName(SERIALIZED_NAME_STATES)
  private List<DataContinentsStates> states = null;

  public static final String SERIALIZED_NAME_THOUSAND_SEP = "thousand_sep";
  @SerializedName(SERIALIZED_NAME_THOUSAND_SEP)
  private String thousandSep;

  public static final String SERIALIZED_NAME_WEIGHT_UNIT = "weight_unit";
  @SerializedName(SERIALIZED_NAME_WEIGHT_UNIT)
  private String weightUnit;


  public DataContinentsCountries code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * ISO3166 alpha-2 country code.
   * @return code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ISO3166 alpha-2 country code.")

  public String getCode() {
    return code;
  }


  public void setCode(String code) {
    this.code = code;
  }


  public DataContinentsCountries currencyCode(String currencyCode) {
    
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * Default ISO4127 alpha-3 currency code for the country.
   * @return currencyCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Default ISO4127 alpha-3 currency code for the country.")

  public String getCurrencyCode() {
    return currencyCode;
  }


  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }


  public DataContinentsCountries currencyPos(String currencyPos) {
    
    this.currencyPos = currencyPos;
    return this;
  }

   /**
   * Currency symbol position for this country.
   * @return currencyPos
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Currency symbol position for this country.")

  public String getCurrencyPos() {
    return currencyPos;
  }


  public void setCurrencyPos(String currencyPos) {
    this.currencyPos = currencyPos;
  }


  public DataContinentsCountries decimalSep(String decimalSep) {
    
    this.decimalSep = decimalSep;
    return this;
  }

   /**
   * Decimal separator for displayed prices for this country.
   * @return decimalSep
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Decimal separator for displayed prices for this country.")

  public String getDecimalSep() {
    return decimalSep;
  }


  public void setDecimalSep(String decimalSep) {
    this.decimalSep = decimalSep;
  }


  public DataContinentsCountries dimensionUnit(String dimensionUnit) {
    
    this.dimensionUnit = dimensionUnit;
    return this;
  }

   /**
   * The unit lengths are defined in for this country.
   * @return dimensionUnit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unit lengths are defined in for this country.")

  public String getDimensionUnit() {
    return dimensionUnit;
  }


  public void setDimensionUnit(String dimensionUnit) {
    this.dimensionUnit = dimensionUnit;
  }


  public DataContinentsCountries name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Full name of country.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Full name of country.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public DataContinentsCountries numDecimals(Integer numDecimals) {
    
    this.numDecimals = numDecimals;
    return this;
  }

   /**
   * Number of decimal points shown in displayed prices for this country.
   * @return numDecimals
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of decimal points shown in displayed prices for this country.")

  public Integer getNumDecimals() {
    return numDecimals;
  }


  public void setNumDecimals(Integer numDecimals) {
    this.numDecimals = numDecimals;
  }


  public DataContinentsCountries states(List<DataContinentsStates> states) {
    
    this.states = states;
    return this;
  }

  public DataContinentsCountries addStatesItem(DataContinentsStates statesItem) {
    if (this.states == null) {
      this.states = new ArrayList<DataContinentsStates>();
    }
    this.states.add(statesItem);
    return this;
  }

   /**
   * List of states in this country.
   * @return states
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of states in this country.")

  public List<DataContinentsStates> getStates() {
    return states;
  }


  public void setStates(List<DataContinentsStates> states) {
    this.states = states;
  }


  public DataContinentsCountries thousandSep(String thousandSep) {
    
    this.thousandSep = thousandSep;
    return this;
  }

   /**
   * Thousands separator for displayed prices in this country.
   * @return thousandSep
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Thousands separator for displayed prices in this country.")

  public String getThousandSep() {
    return thousandSep;
  }


  public void setThousandSep(String thousandSep) {
    this.thousandSep = thousandSep;
  }


  public DataContinentsCountries weightUnit(String weightUnit) {
    
    this.weightUnit = weightUnit;
    return this;
  }

   /**
   * The unit weights are defined in for this country.
   * @return weightUnit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unit weights are defined in for this country.")

  public String getWeightUnit() {
    return weightUnit;
  }


  public void setWeightUnit(String weightUnit) {
    this.weightUnit = weightUnit;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataContinentsCountries dataContinentsCountries = (DataContinentsCountries) o;
    return Objects.equals(this.code, dataContinentsCountries.code) &&
        Objects.equals(this.currencyCode, dataContinentsCountries.currencyCode) &&
        Objects.equals(this.currencyPos, dataContinentsCountries.currencyPos) &&
        Objects.equals(this.decimalSep, dataContinentsCountries.decimalSep) &&
        Objects.equals(this.dimensionUnit, dataContinentsCountries.dimensionUnit) &&
        Objects.equals(this.name, dataContinentsCountries.name) &&
        Objects.equals(this.numDecimals, dataContinentsCountries.numDecimals) &&
        Objects.equals(this.states, dataContinentsCountries.states) &&
        Objects.equals(this.thousandSep, dataContinentsCountries.thousandSep) &&
        Objects.equals(this.weightUnit, dataContinentsCountries.weightUnit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, currencyCode, currencyPos, decimalSep, dimensionUnit, name, numDecimals, states, thousandSep, weightUnit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataContinentsCountries {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    currencyPos: ").append(toIndentedString(currencyPos)).append("\n");
    sb.append("    decimalSep: ").append(toIndentedString(decimalSep)).append("\n");
    sb.append("    dimensionUnit: ").append(toIndentedString(dimensionUnit)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    numDecimals: ").append(toIndentedString(numDecimals)).append("\n");
    sb.append("    states: ").append(toIndentedString(states)).append("\n");
    sb.append("    thousandSep: ").append(toIndentedString(thousandSep)).append("\n");
    sb.append("    weightUnit: ").append(toIndentedString(weightUnit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

