/*
 * wc/v3
 * OpenAPI documented, based on generated OpenAPI document of the namespace wc/v3 with some manual fixes.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.DataContinentsCountries;

/**
 * DataContinents
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-03T11:14:37.017890013+01:00[Europe/Amsterdam]")
public class DataContinents {
  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_COUNTRIES = "countries";
  @SerializedName(SERIALIZED_NAME_COUNTRIES)
  private List<DataContinentsCountries> countries = null;


  public DataContinents code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * 2 character continent code.
   * @return code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "2 character continent code.")

  public String getCode() {
    return code;
  }


  public void setCode(String code) {
    this.code = code;
  }


  public DataContinents name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Full name of continent.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Full name of continent.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public DataContinents countries(List<DataContinentsCountries> countries) {
    
    this.countries = countries;
    return this;
  }

  public DataContinents addCountriesItem(DataContinentsCountries countriesItem) {
    if (this.countries == null) {
      this.countries = new ArrayList<DataContinentsCountries>();
    }
    this.countries.add(countriesItem);
    return this;
  }

   /**
   * List of countries on this continent.
   * @return countries
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of countries on this continent.")

  public List<DataContinentsCountries> getCountries() {
    return countries;
  }


  public void setCountries(List<DataContinentsCountries> countries) {
    this.countries = countries;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataContinents dataContinents = (DataContinents) o;
    return Objects.equals(this.code, dataContinents.code) &&
        Objects.equals(this.name, dataContinents.name) &&
        Objects.equals(this.countries, dataContinents.countries);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, name, countries);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataContinents {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    countries: ").append(toIndentedString(countries)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

