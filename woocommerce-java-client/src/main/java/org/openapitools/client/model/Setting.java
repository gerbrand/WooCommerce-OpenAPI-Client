/*
 * wc/v3
 * OpenAPI documented, based on generated OpenAPI document of the namespace wc/v3 with some manual fixes.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Setting
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-03T11:14:37.017890013+01:00[Europe/Amsterdam]")
public class Setting {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_GROUP_ID = "group_id";
  @SerializedName(SERIALIZED_NAME_GROUP_ID)
  private String groupId;

  public static final String SERIALIZED_NAME_LABEL = "label";
  @SerializedName(SERIALIZED_NAME_LABEL)
  private String label;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private String value;

  public static final String SERIALIZED_NAME_DEFAULT = "default";
  @SerializedName(SERIALIZED_NAME_DEFAULT)
  private String _default;

  public static final String SERIALIZED_NAME_TIP = "tip";
  @SerializedName(SERIALIZED_NAME_TIP)
  private String tip;

  public static final String SERIALIZED_NAME_PLACEHOLDER = "placeholder";
  @SerializedName(SERIALIZED_NAME_PLACEHOLDER)
  private String placeholder;

  /**
   * Type of setting.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    TEXT("text"),
    
    EMAIL("email"),
    
    NUMBER("number"),
    
    COLOR("color"),
    
    PASSWORD("password"),
    
    TEXTAREA("textarea"),
    
    SELECT("select"),
    
    MULTISELECT("multiselect"),
    
    RADIO("radio"),
    
    IMAGE_WIDTH("image_width"),
    
    CHECKBOX("checkbox");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_OPTIONS = "options";
  @SerializedName(SERIALIZED_NAME_OPTIONS)
  private Object options;


  public Setting id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * A unique identifier for the setting.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique identifier for the setting.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public Setting groupId(String groupId) {
    
    this.groupId = groupId;
    return this;
  }

   /**
   * An identifier for the group this setting belongs to.
   * @return groupId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An identifier for the group this setting belongs to.")

  public String getGroupId() {
    return groupId;
  }


  public void setGroupId(String groupId) {
    this.groupId = groupId;
  }


  public Setting label(String label) {
    
    this.label = label;
    return this;
  }

   /**
   * A human readable label for the setting used in interfaces.
   * @return label
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A human readable label for the setting used in interfaces.")

  public String getLabel() {
    return label;
  }


  public void setLabel(String label) {
    this.label = label;
  }


  public Setting description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * A human readable description for the setting used in interfaces.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A human readable description for the setting used in interfaces.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public Setting value(String value) {
    
    this.value = value;
    return this;
  }

   /**
   * Setting value.
   * @return value
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Setting value.")

  public String getValue() {
    return value;
  }


  public void setValue(String value) {
    this.value = value;
  }


  public Setting _default(String _default) {
    
    this._default = _default;
    return this;
  }

   /**
   * Default value for the setting.
   * @return _default
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Default value for the setting.")

  public String getDefault() {
    return _default;
  }


  public void setDefault(String _default) {
    this._default = _default;
  }


  public Setting tip(String tip) {
    
    this.tip = tip;
    return this;
  }

   /**
   * Additional help text shown to the user about the setting.
   * @return tip
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Additional help text shown to the user about the setting.")

  public String getTip() {
    return tip;
  }


  public void setTip(String tip) {
    this.tip = tip;
  }


  public Setting placeholder(String placeholder) {
    
    this.placeholder = placeholder;
    return this;
  }

   /**
   * Placeholder text to be displayed in text inputs.
   * @return placeholder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Placeholder text to be displayed in text inputs.")

  public String getPlaceholder() {
    return placeholder;
  }


  public void setPlaceholder(String placeholder) {
    this.placeholder = placeholder;
  }


  public Setting type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Type of setting.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Type of setting.")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public Setting options(Object options) {
    
    this.options = options;
    return this;
  }

   /**
   * Array of options (key value pairs) for inputs such as select, multiselect, and radio buttons.
   * @return options
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Array of options (key value pairs) for inputs such as select, multiselect, and radio buttons.")

  public Object getOptions() {
    return options;
  }


  public void setOptions(Object options) {
    this.options = options;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Setting setting = (Setting) o;
    return Objects.equals(this.id, setting.id) &&
        Objects.equals(this.groupId, setting.groupId) &&
        Objects.equals(this.label, setting.label) &&
        Objects.equals(this.description, setting.description) &&
        Objects.equals(this.value, setting.value) &&
        Objects.equals(this._default, setting._default) &&
        Objects.equals(this.tip, setting.tip) &&
        Objects.equals(this.placeholder, setting.placeholder) &&
        Objects.equals(this.type, setting.type) &&
        Objects.equals(this.options, setting.options);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, groupId, label, description, value, _default, tip, placeholder, type, options);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Setting {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    _default: ").append(toIndentedString(_default)).append("\n");
    sb.append("    tip: ").append(toIndentedString(tip)).append("\n");
    sb.append("    placeholder: ").append(toIndentedString(placeholder)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

