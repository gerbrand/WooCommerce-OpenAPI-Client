/*
 * wc/v3
 * OpenAPI documented, based on generated OpenAPI document of the namespace wc/v3 with some manual fixes.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.net.URI;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for SystemStatusEnvironment
 */
public class SystemStatusEnvironmentTest {
    private final SystemStatusEnvironment model = new SystemStatusEnvironment();

    /**
     * Model tests for SystemStatusEnvironment
     */
    @Test
    public void testSystemStatusEnvironment() {
        // TODO: test SystemStatusEnvironment
    }

    /**
     * Test the property 'homeUrl'
     */
    @Test
    public void homeUrlTest() {
        // TODO: test homeUrl
    }

    /**
     * Test the property 'siteUrl'
     */
    @Test
    public void siteUrlTest() {
        // TODO: test siteUrl
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'logDirectory'
     */
    @Test
    public void logDirectoryTest() {
        // TODO: test logDirectory
    }

    /**
     * Test the property 'logDirectoryWritable'
     */
    @Test
    public void logDirectoryWritableTest() {
        // TODO: test logDirectoryWritable
    }

    /**
     * Test the property 'wpVersion'
     */
    @Test
    public void wpVersionTest() {
        // TODO: test wpVersion
    }

    /**
     * Test the property 'wpMultisite'
     */
    @Test
    public void wpMultisiteTest() {
        // TODO: test wpMultisite
    }

    /**
     * Test the property 'wpMemoryLimit'
     */
    @Test
    public void wpMemoryLimitTest() {
        // TODO: test wpMemoryLimit
    }

    /**
     * Test the property 'wpDebugMode'
     */
    @Test
    public void wpDebugModeTest() {
        // TODO: test wpDebugMode
    }

    /**
     * Test the property 'wpCron'
     */
    @Test
    public void wpCronTest() {
        // TODO: test wpCron
    }

    /**
     * Test the property 'language'
     */
    @Test
    public void languageTest() {
        // TODO: test language
    }

    /**
     * Test the property 'serverInfo'
     */
    @Test
    public void serverInfoTest() {
        // TODO: test serverInfo
    }

    /**
     * Test the property 'phpVersion'
     */
    @Test
    public void phpVersionTest() {
        // TODO: test phpVersion
    }

    /**
     * Test the property 'phpPostMaxSize'
     */
    @Test
    public void phpPostMaxSizeTest() {
        // TODO: test phpPostMaxSize
    }

    /**
     * Test the property 'phpMaxExecutionTime'
     */
    @Test
    public void phpMaxExecutionTimeTest() {
        // TODO: test phpMaxExecutionTime
    }

    /**
     * Test the property 'phpMaxInputVars'
     */
    @Test
    public void phpMaxInputVarsTest() {
        // TODO: test phpMaxInputVars
    }

    /**
     * Test the property 'curlVersion'
     */
    @Test
    public void curlVersionTest() {
        // TODO: test curlVersion
    }

    /**
     * Test the property 'suhosinInstalled'
     */
    @Test
    public void suhosinInstalledTest() {
        // TODO: test suhosinInstalled
    }

    /**
     * Test the property 'maxUploadSize'
     */
    @Test
    public void maxUploadSizeTest() {
        // TODO: test maxUploadSize
    }

    /**
     * Test the property 'mysqlVersion'
     */
    @Test
    public void mysqlVersionTest() {
        // TODO: test mysqlVersion
    }

    /**
     * Test the property 'mysqlVersionString'
     */
    @Test
    public void mysqlVersionStringTest() {
        // TODO: test mysqlVersionString
    }

    /**
     * Test the property 'defaultTimezone'
     */
    @Test
    public void defaultTimezoneTest() {
        // TODO: test defaultTimezone
    }

    /**
     * Test the property 'fsockopenOrCurlEnabled'
     */
    @Test
    public void fsockopenOrCurlEnabledTest() {
        // TODO: test fsockopenOrCurlEnabled
    }

    /**
     * Test the property 'soapclientEnabled'
     */
    @Test
    public void soapclientEnabledTest() {
        // TODO: test soapclientEnabled
    }

    /**
     * Test the property 'domdocumentEnabled'
     */
    @Test
    public void domdocumentEnabledTest() {
        // TODO: test domdocumentEnabled
    }

    /**
     * Test the property 'gzipEnabled'
     */
    @Test
    public void gzipEnabledTest() {
        // TODO: test gzipEnabled
    }

    /**
     * Test the property 'mbstringEnabled'
     */
    @Test
    public void mbstringEnabledTest() {
        // TODO: test mbstringEnabled
    }

    /**
     * Test the property 'remotePostSuccessful'
     */
    @Test
    public void remotePostSuccessfulTest() {
        // TODO: test remotePostSuccessful
    }

    /**
     * Test the property 'remotePostResponse'
     */
    @Test
    public void remotePostResponseTest() {
        // TODO: test remotePostResponse
    }

    /**
     * Test the property 'remoteGetSuccessful'
     */
    @Test
    public void remoteGetSuccessfulTest() {
        // TODO: test remoteGetSuccessful
    }

    /**
     * Test the property 'remoteGetResponse'
     */
    @Test
    public void remoteGetResponseTest() {
        // TODO: test remoteGetResponse
    }

}
