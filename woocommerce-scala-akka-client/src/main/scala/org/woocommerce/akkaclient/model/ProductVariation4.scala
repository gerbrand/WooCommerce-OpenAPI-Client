/**
 * wc/v3
 * OpenAPI documented, based on generated OpenAPI document of the namespace wc/v3 with some manual fixes.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.woocommerce.akkaclient.model

import org.woocommerce.akkaclient.core.ApiModel

case class ProductVariation4 (
  /* Variation description. */
  description: Option[String] = None,
  /* Unique identifier. */
  sku: Option[String] = None,
  /* Variation regular price. */
  regularPrice: Option[String] = None,
  /* Variation sale price. */
  salePrice: Option[String] = None,
  /* Start date of sale price, in the site's timezone. */
  dateOnSaleFrom: Option[String] = None,
  /* Start date of sale price, as GMT. */
  dateOnSaleFromGmt: Option[String] = None,
  /* End date of sale price, in the site's timezone. */
  dateOnSaleTo: Option[String] = None,
  /* End date of sale price, in the site's timezone. */
  dateOnSaleToGmt: Option[String] = None,
  /* Variation status. */
  status: Option[ProductVariation4Enums.Status] = None,
  /* If the variation is virtual. */
  virtual: Option[Boolean] = None,
  /* If the variation is downloadable. */
  downloadable: Option[Boolean] = None,
  /* List of downloadable files. */
  downloads: Option[Seq[ProductsDownloads]] = None,
  /* Number of times downloadable files can be downloaded after purchase. */
  downloadLimit: Option[Int] = None,
  /* Number of days until access to downloadable files expires. */
  downloadExpiry: Option[Int] = None,
  /* Tax status. */
  taxStatus: Option[ProductVariation4Enums.TaxStatus] = None,
  /* Tax class. */
  taxClass: Option[String] = None,
  /* Stock management at variation level. */
  manageStock: Option[Boolean] = None,
  /* Stock quantity. */
  stockQuantity: Option[Int] = None,
  /* Controls the stock status of the product. */
  stockStatus: Option[ProductVariation4Enums.StockStatus] = None,
  /* If managing stock, this controls if backorders are allowed. */
  backorders: Option[ProductVariation4Enums.Backorders] = None,
  /* Low Stock amount for the variation. */
  lowStockAmount: Option[Int] = None,
  /* Variation weight (kg). */
  weight: Option[String] = None,
  dimensions: Option[ProductsProductIdVariationsDimensions] = None,
  /* Shipping class slug. */
  shippingClass: Option[String] = None,
  image: Option[ProductsProductIdVariationsImage] = None,
  /* List of attributes. */
  attributes: Option[Seq[ProductsDefaultAttributes]] = None,
  /* Menu order, used to custom sort products. */
  menuOrder: Option[Int] = None,
  /* Meta data. */
  metaData: Option[Seq[CouponsMetaData]] = None
) extends ApiModel

object ProductVariation4Enums {

  type Status = Status.Value
  type TaxStatus = TaxStatus.Value
  type StockStatus = StockStatus.Value
  type Backorders = Backorders.Value
  object Status extends Enumeration {
    val Draft = Value("draft")
    val Pending = Value("pending")
    val `Private` = Value("private")
    val Publish = Value("publish")
  }

  object TaxStatus extends Enumeration {
    val Taxable = Value("taxable")
    val Shipping = Value("shipping")
    val None = Value("none")
  }

  object StockStatus extends Enumeration {
    val Instock = Value("instock")
    val Outofstock = Value("outofstock")
    val Onbackorder = Value("onbackorder")
  }

  object Backorders extends Enumeration {
    val No = Value("no")
    val Notify = Value("notify")
    val Yes = Value("yes")
  }

}
